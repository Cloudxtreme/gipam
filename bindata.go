// +build !debug

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path"
	"path/filepath"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _templates_createprefix_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x55\xdf\x6f\xdb\x36\x10\x7e\xef\x5f\x71\xe0\x0a\x44\xc2\x62\x69\x3f\x30\x0c\xc8\x1c\x0f\x45\xfb\xb2\x61\x68\x03\x34\xc0\x9e\x4f\x22\x15\x33\xa5\x49\x81\xa4\x9c\x68\x81\xff\xf7\x1d\x49\x29\xa2\x1b\x1b\xd9\x86\x3d\xc4\x39\xf2\x3e\xde\xdd\x77\xf7\x91\x5a\x73\xb9\x87\x56\xa1\x73\xd7\xcc\x9a\x07\xb6\x79\x03\x90\xef\xb5\x46\xad\xdc\x6e\xf5\x73\x74\x90\xab\x07\xc9\xaf\x99\xb0\xd6\x58\x36\x63\x50\x09\xeb\x21\xfe\xae\x38\xea\x3b\x41\x2e\xe7\x47\x25\xae\x19\x97\xae\x57\x38\x5e\x81\x36\x5a\xb0\xcd\xba\xee\xa7\x38\x9d\xb1\xbb\xf9\x7c\xb0\x57\x5b\x63\xe5\x5f\x46\x7b\x54\x2c\xa6\x68\xad\x40\x2f\xa6\xb4\xc7\x35\x45\xfc\x9d\x35\x43\xff\xec\x26\x80\xc2\x46\x28\x20\xdf\x35\xeb\xad\xe8\xe4\x23\xfb\x8a\xc3\x0f\xd0\x52\x7c\x4b\x8b\x08\x65\x9b\x9b\x08\x5b\xd7\x71\x99\x45\x7a\x49\xff\xfb\xef\xb2\x4c\x84\x90\xba\x1f\x3c\xf8\xb1\x27\x8a\x5e\x3c\x7a\x76\x54\xda\x94\x26\xf1\x98\x6b\xc1\xc1\x9b\xce\xb4\x83\xab\xb3\x4c\x35\xa5\x7a\x66\x78\xb4\xf8\x37\x74\xb9\x70\xed\xab\x64\x3f\x10\xc8\xca\xde\x4b\xa3\xff\x0b\xe3\xc0\x12\x69\x24\xe7\x89\xa6\x2a\x48\x43\xe4\xfd\x31\x8c\x7a\x3e\xf2\xff\xf0\x7d\x59\xa2\xe9\x3a\x27\x7c\x64\x7a\xb2\xe4\x66\xf0\xde\xe8\x69\x4a\x6e\x68\x76\x72\x99\x53\xe3\x35\xd0\xdf\x8a\x8b\x0e\x07\xe5\xd9\xe6\x7d\x94\xdb\xba\x4e\x87\x5e\x2f\x79\x5d\x87\x32\xe3\x6d\x49\x9b\xa7\xef\xcd\x4f\xf3\xbd\xc9\x5c\x3d\x6a\x9a\x5c\xfc\x5d\x49\xdd\x99\x93\x1a\x4f\xee\xad\x40\x2e\xf5\x1d\xdb\xfc\xb9\x45\x7f\xe1\x00\x21\xc9\xe9\xd7\xb3\xcd\x4b\xe7\x1a\xc3\xc7\xbc\x79\x7d\xde\x98\x77\x53\x10\x90\x21\x60\x98\x21\x4a\x2d\x6c\xd0\x12\xfc\x76\x03\xc8\xb9\x15\xce\x09\x57\x65\x4d\xe8\xcf\x05\xbb\xdd\x8a\x11\x5a\xd4\x40\x21\x95\x68\x7d\x28\x71\x3b\x3a\xd9\xa2\xa2\x2d\x54\xd2\x8f\x50\x88\xea\xae\x22\xc7\x1f\xef\x3e\x02\xcd\x41\x0b\x5f\x5e\x82\xb1\x59\x14\x3f\x47\xb9\x1f\x9c\x87\x46\x00\x99\xc8\x77\x52\x4b\xe7\x2d\x7a\xb9\xa7\x9d\x26\x98\x6d\xd0\xef\x1c\x30\x0b\x70\xcc\x02\x95\x82\xd1\x0c\x16\x7a\x23\xb5\x5f\x79\xb3\x8a\x06\x28\xa9\xbf\x2c\xfc\xca\x93\x04\x8f\x66\x3c\x99\xcf\x46\xb0\xd3\x35\x8a\x88\xb7\x05\xa7\x1b\xbd\x13\xda\x97\x15\x91\xe5\x63\xd1\x0d\x3a\x96\x58\x94\xf0\x94\x02\xbe\x2d\xd8\x37\xd3\x5b\x56\x56\x49\x85\x0b\x4a\xec\xc3\xd9\x19\x0a\x10\xd7\x15\x8d\x27\xfc\xff\x90\xb4\x59\x94\xbf\xcc\xee\x25\x16\x24\x9d\x52\x48\xa2\xf3\x3e\x8c\xbe\x08\x6f\x2d\x36\x4a\x70\x96\x1d\xa8\xf0\x1e\x1f\x8b\xa7\xa5\x53\xe1\x36\x5c\xc1\xc5\xcd\xa7\xcf\xb7\x17\x97\xcb\xf6\x60\x15\xed\xd6\xd8\xcb\x3a\x4c\x6d\xe7\xea\xa7\xa7\xea\x70\xa8\x93\x52\x84\xcb\xb1\x1c\x3d\x5e\xc1\xef\x9f\x3f\x7d\xac\x68\x24\x24\x4f\xd9\x8d\x79\x0a\x98\xf4\x75\x15\xeb\x9d\xde\xbf\xb2\xda\xa3\x2a\xca\xcb\x1c\xc6\x97\x27\x29\x61\xe3\x13\xf2\x12\x79\xc8\x17\x61\xd2\xd4\x9c\xdb\xc8\x83\x61\xdf\x2b\xd2\x5a\x08\x51\xdf\x3b\x6a\xc8\x57\x75\x4e\xb0\x63\xd7\xa1\xac\x38\x7d\x8e\x96\x31\x04\x64\x36\x85\xd4\xe8\xf4\x8d\x2b\xab\x76\xea\x6d\xf8\x8e\xb1\x4b\x60\xf1\x4b\xb6\xb4\x18\xe0\x41\x6a\x6e\x1e\x2a\x65\x52\x1d\xa4\x04\x82\xb6\xa2\x60\x55\xcd\xbe\x0d\xa1\x2b\xc9\x17\x3c\x25\xef\x50\xaa\x4c\x03\xd6\xfe\xe3\xdc\x0d\x25\xf9\x72\x94\x3c\x47\x6f\xfd\x4e\x85\x70\x54\x81\xeb\x8d\x76\x22\xce\x28\x7a\x8f\xf2\xa3\x7a\xc0\xd1\x9d\xd0\xea\x39\x8d\x59\xb1\x33\x7b\x71\x5e\x66\x87\xd9\x3c\x94\x6f\x9e\x97\xeb\x7a\xbe\x29\xf3\x0b\xf9\x77\x00\x00\x00\xff\xff\xbe\x28\x36\xc3\x6c\x08\x00\x00")

func templates_createprefix_html_bytes() ([]byte, error) {
	return bindata_read(
		_templates_createprefix_html,
		"templates/createPrefix.html",
	)
}

func templates_createprefix_html() (*asset, error) {
	bytes, err := templates_createprefix_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/createPrefix.html", size: 2156, mode: os.FileMode(420), modTime: time.Unix(1441421275, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_createrealm_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x55\x6d\x6f\xdb\x36\x10\xfe\xde\x5f\x71\xe0\x0a\xc4\x46\x6d\x69\x2f\x18\x06\x64\x8e\x87\xa2\x45\x81\x0d\x5b\x1b\x34\xc5\x86\x7d\xa4\xc5\x93\xc5\x8e\x22\x39\x92\x8a\xe3\x15\xf9\xef\x3b\x92\x56\x44\x27\xce\xb2\x0d\xfd\x10\x47\xe4\x3d\x7c\xee\xb9\x37\x72\x25\xe4\x35\x34\x8a\x7b\x7f\xc1\x9c\xd9\xb1\xf5\x33\x80\x72\xaf\x31\x6a\xe9\xfb\xe5\x77\xc9\x40\x26\x0b\x52\x5c\x30\x74\xce\x38\x36\x62\xb8\x42\x17\x20\xfd\x2e\x05\xd7\x5b\x24\x93\x0f\x7b\x85\x17\x4c\x48\x6f\x15\xdf\x9f\x83\x36\x1a\xd9\x7a\x55\xdb\x03\x4f\x6b\x5c\x3f\x9e\x8f\xdf\xcb\xce\x38\xf9\x97\xd1\x81\x2b\x96\x5c\x34\x0e\x79\xc0\xf7\xc8\x55\x7f\xf0\x7d\x2c\x2c\x1d\xda\x3a\x33\xd8\x3b\x33\x01\x14\xdf\xa0\x02\xb2\x51\x34\xf1\xe8\x5b\xde\x23\xbb\x17\xcb\xd7\xd0\x90\x1f\x47\x8b\x84\x66\xeb\x08\x5a\xd5\x69\x51\x50\x3d\x4c\xc2\x57\x5f\x16\xae\x08\x21\xb5\x1d\x02\x84\xbd\xa5\x40\x03\xde\x04\x76\xa4\xed\xe0\x24\x47\x53\x88\xe1\x43\x30\xad\x69\x06\x5f\x17\xce\x6a\xf2\x76\x17\xe5\xd1\xe2\x3f\x87\xfc\x1a\x7d\xf3\x64\xc8\x11\xe4\xa4\x0d\xd2\xe8\xff\x13\x79\x8c\x96\x93\xb7\x27\x02\xce\x52\xa8\xad\x08\xf2\x4d\xac\xfe\x78\xee\xf3\x44\xfe\x50\xa7\x69\x5b\x8f\x21\x85\x7b\x52\xf7\x66\x08\xc1\xe8\x43\xc9\xfc\xb0\xe9\xe5\x54\xb4\x4d\xd0\x40\x7f\x4b\x81\x2d\x1f\x54\x60\xeb\x57\xa9\x03\x57\x75\x3e\xf4\xb4\xe4\x55\x1d\x65\xa6\x01\xca\x9b\xa7\x47\xe9\xdb\x71\x94\x0a\x93\xe5\x9a\x6a\x98\x7e\x97\x52\xb7\xe6\x64\xc7\x67\x73\x87\x5c\x48\xbd\x65\xeb\xdf\x3a\x1e\xce\x3c\x70\x48\xa9\xfe\xe1\xd1\xdc\xe5\x63\x1b\x23\xf6\x65\xee\x6c\x99\x97\x97\x99\x03\x64\xa4\xd3\xd4\xa5\xde\xf2\x06\x41\x6a\xd8\x75\xb2\xe9\x68\xb4\x49\x9c\xc3\x56\xde\xa0\x5f\x40\x67\x7c\x48\x20\xe0\x5a\x14\x2c\xc2\xf4\x5c\x6a\xda\x75\x08\x83\x96\x7f\x0e\x58\xc1\x95\xe9\x11\x7e\xbc\x7c\xf9\x8b\x87\x26\xb2\x84\x0e\x3d\xc2\xaf\xef\xdf\xf8\xaa\xc8\xa7\x7d\x4c\xd8\x1b\xe3\xc0\xcb\xde\x2a\x04\x81\x56\x99\x7d\x8f\x3a\x90\x04\x4e\xbb\x7a\x4b\xbb\xec\xd2\x19\xc1\x0e\xf2\x7d\x67\x06\x25\x60\x83\xd0\x1b\x87\x05\x4d\xe8\xb8\x06\xd4\x66\xd8\x76\x15\xfc\x6e\x06\xd2\xa2\x29\xa8\x1d\xdf\x93\x5a\x21\x12\x1c\x14\x15\xdb\x2d\x00\xab\x6d\x45\xfc\xec\x67\xbe\x61\x05\x45\xf6\x40\x05\x06\xbc\xb1\xe8\xe4\x41\x08\xad\x89\x4a\x7a\x13\x4f\x8b\x18\x58\xc2\xd0\x74\x07\x8a\xdc\x95\x04\x66\x08\xa4\xf9\x64\xd8\x47\x4d\x74\xf8\x9c\x3e\xf2\xa4\x26\xf3\xf3\x99\xa0\x9b\x23\xfa\x9e\x57\xa4\x48\xec\x67\xed\xa0\x9b\x38\xc5\xb3\x39\x7c\xca\x6c\xcf\x67\xec\x8b\xf2\xf2\x9c\x57\xb9\xd1\x27\x28\x5e\x47\x82\x11\x0f\x90\xd6\x15\x15\x38\xfe\x7f\x9d\xdb\x7f\x36\xff\x7e\x34\xdf\x23\x84\x3c\x0f\xc4\x4b\xa9\x7b\x15\x7b\x6c\x16\xaf\x79\xbe\x51\x28\x58\x71\xaa\xe2\x1f\xf9\xcd\xec\xd3\x94\x82\x38\x75\xe7\x70\x76\xf9\xee\xea\xc3\xd9\x62\xda\x1e\x9c\xa2\xdd\x9a\x5b\x59\xa7\x24\xfb\xd2\x28\x78\xe0\xe7\xf0\xd3\xd5\xbb\xb7\x95\x0f\x8e\xf2\x27\xdb\x7d\xc9\x09\xa9\x5d\xcf\x93\xc6\xe9\x8e\x9d\x57\xd7\x5c\xcd\xe6\x8b\x12\x27\xa6\x1b\xaf\x80\xa7\x1b\xea\x21\xfc\xb6\x5c\xc4\x7b\x8d\x12\xf3\x21\xc9\x67\xdc\x5a\x25\x1b\x1e\x79\xea\x8f\x9e\xf2\x70\x4f\xed\x01\x76\x6c\xba\x9d\x57\x82\x1e\xc0\xa9\x04\x11\x59\x54\x20\x27\x39\xbf\xaa\xf3\xaa\x39\xa4\x34\xbe\x9c\x6c\x01\x2c\xbd\x9d\x53\x66\x01\x76\x52\x0b\xb3\xab\x94\xc9\x3a\xa8\x15\x08\xda\xe0\x8c\xe5\x0c\xd6\xec\x45\xe4\xaf\xd2\xa2\x92\xe2\x05\xab\xc7\xe9\x2d\x68\x48\x53\xcb\xa5\x2a\xda\xc2\xb9\x7f\x2d\x69\x43\xbe\xff\x38\xd2\x54\xa2\xbb\xd0\xab\x48\x47\x0a\xbc\x35\xda\x63\x2a\x60\xb2\x1e\xf9\xcf\x23\x78\xa2\x87\xff\xb1\xed\x1c\xf6\xe6\x1a\x1f\xef\xbc\xdb\xf1\xf3\x76\xfe\xec\x6e\xb9\xaa\xc7\x31\x1a\x2f\xe7\xbf\x03\x00\x00\xff\xff\x19\x10\xcf\xfc\xfa\x08\x00\x00")

func templates_createrealm_html_bytes() ([]byte, error) {
	return bindata_read(
		_templates_createrealm_html,
		"templates/createRealm.html",
	)
}

func templates_createrealm_html() (*asset, error) {
	bytes, err := templates_createrealm_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/createRealm.html", size: 2298, mode: os.FileMode(420), modTime: time.Unix(1441419292, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_deleterealm_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x55\x5d\xaf\xe3\x34\x10\x7d\xe7\x57\x0c\x66\xa5\xa6\xda\x9b\x44\xda\x27\x74\xb7\xad\x04\x7b\x0b\x5a\x84\x2e\x12\xec\x0b\x8f\x8e\xed\xb4\xe6\x3a\x76\x64\x3b\xfd\x50\xd5\xff\xce\x38\x9f\x4e\x28\x82\x87\x7d\x68\xe3\x8c\x3d\x67\xce\xcc\x9c\x71\x36\x5c\x9e\x80\x29\xea\xdc\x96\x58\x73\x26\xbb\x6f\x00\x62\x1b\x33\x2a\x75\x55\xfa\x3d\xf4\x0b\x53\x96\x4e\xf8\xf4\x03\x01\xe7\xaf\x4a\x6c\x89\x17\x17\x9f\x52\x25\x0f\xfa\x19\x98\xd0\x5e\xd8\x16\x03\x51\xea\x01\x83\x53\x7d\x10\x36\x2d\xa8\x05\xaa\x84\xf5\xdd\x7f\xda\x99\xe1\xf8\x81\xec\x36\xc5\xee\xe5\x87\xd7\x9f\xf7\xbf\xc3\xec\xb1\xc9\x8b\xdd\x26\xaf\x7b\xbc\x88\x55\x4d\xb5\x50\xd0\xfe\xa7\x5c\x94\xb4\x51\xbe\x8f\xfa\xe0\x5c\x5a\x18\x7e\xfd\x6f\xbe\x1d\xe7\x69\x0d\xb0\xbf\x08\xd6\x78\xa9\x0f\xe0\x8f\xd2\x01\x17\x4a\x78\x69\x34\x9c\xa5\x52\xf8\xe6\xbc\x35\x57\xcc\x05\xd7\xd4\x53\x90\x1a\xac\xa0\xaa\x02\x4c\xe6\x76\xcb\x5e\x69\x25\xee\xf7\x90\x41\x06\x5f\x8e\xd4\x47\xb8\x52\x33\xd5\xa0\x3f\xd4\x56\x94\xf2\x22\xdc\x13\x1c\x8d\xf3\xf8\xe0\xa6\xa2\x52\x3b\xa0\x9a\x03\xf5\xde\xca\xa2\xf1\xc2\x05\x00\xe9\x22\x00\x53\x0b\x4b\x5b\x2a\x8c\x6a\x6d\x3c\x14\x02\x1a\xcd\x8d\x16\xdf\x4e\xa9\xe4\x51\x2e\x93\xb5\x34\xb6\x02\xc9\xb1\x29\x21\x1b\xf1\x13\xbe\x92\x38\xe7\xb6\x7a\x61\x9f\x19\x5d\x4a\x5b\xfd\x68\x2e\x64\xa8\x66\xf0\x4d\x0f\xd6\x34\x35\x1c\xa9\x4b\x85\xb5\xc6\xb6\xab\x52\x08\x5e\x50\xf6\x36\x43\x42\x2c\x45\x0b\x6c\x13\xba\x8d\x70\x2f\x6d\x54\xb2\xdb\x87\xc2\x03\xf9\x33\xe4\xfe\x19\xce\x54\x7b\xf0\x66\xac\x69\x57\x47\x2c\xe2\x67\x7e\xbf\x93\xb0\x53\x5b\xc3\x30\xc8\xf3\x26\x6f\x31\x17\x71\xa4\xae\x1b\x04\xb8\xd6\x7d\x7f\xe7\x8c\x31\x34\xa2\x2a\x12\xa7\xd5\xf3\x00\xda\x78\xc3\x4c\x55\x87\xb7\x2d\x41\x71\x77\xa6\xd2\xb0\xc6\x2d\x82\x38\x14\x53\x0c\xf1\xc9\x1a\xe7\xc6\x48\x07\x75\xad\x8f\x12\xb7\x60\x5c\xa5\x56\x54\xe6\x24\x20\x26\x31\x95\x0a\xa8\x95\x34\x3d\x4a\xce\x85\x46\xd6\xb6\xc1\xaa\x6c\xf2\x10\x64\xd6\x8e\x1c\xfb\x31\x33\xa0\x22\xbc\xe9\x88\xb8\xa6\xa8\xa4\x1f\x52\xe9\xd2\xef\x6c\x23\xad\xc2\x6b\xc0\xdf\x30\x6b\x5c\x3a\x5a\x28\xc1\xc9\xae\xf3\xea\x2a\x8d\x22\x6d\x41\xa3\x39\xc8\x03\xe9\x71\xa2\x26\x12\xf1\xf2\x6b\xcf\xb7\x63\x56\xd6\xbe\x0f\xfa\x2e\xe1\xd8\x83\x0a\x07\x74\x9d\x21\x49\x7e\x4d\xca\x46\xb3\xa0\xf9\x64\x7d\x1b\x78\x9e\x30\x62\xdf\x0d\xd8\xa2\x0b\xf9\x6e\xde\xde\xf5\xc7\xe1\x64\x6f\xcf\xde\xc4\xb5\xa9\x23\x28\xb8\x4d\xb5\x95\x25\x24\xc3\xb9\x13\x55\xb8\xb9\xdd\x6e\xff\xa7\x46\x67\x40\x10\x53\x09\x03\x14\x52\x08\x52\xf8\x14\xea\x95\x90\x71\x78\x22\x82\x0b\xaf\x21\x81\x0c\x85\x5f\x27\x64\xec\xdb\x13\x04\xa5\xfc\xab\x5b\xa7\xc9\x75\xc6\x42\x18\x74\xaa\x15\xbd\xa2\x0f\xd1\x78\x35\x3c\x08\x36\x13\xd0\x82\xe4\x10\x32\x92\x0f\x1e\xa1\x9c\xf7\xfb\xc1\xec\x1a\xc6\x44\x08\xb8\x44\xce\x26\x49\x2c\x71\x63\x6d\xcc\x00\xbb\x8d\x47\x90\xf7\x61\x79\x9f\xac\x81\x7e\x74\x85\xad\xb3\x2e\x97\xa9\xb5\xe2\x14\xb4\x13\xb7\xa5\xb5\x60\x41\xdb\xe7\x4b\xf7\xd5\x48\xe2\x38\x41\x00\x0f\xca\x82\xed\x5a\xd4\x84\xac\x17\xfd\xb6\xc2\x37\x56\x3f\xa2\xfc\xb0\xd0\x53\xd2\x13\x62\xe4\xfc\x2e\xa3\x7f\xd1\x4b\x32\x8b\x10\xa6\xfb\x19\x56\x2f\xfb\x5f\xf7\x5f\xf6\xab\xa7\x78\xab\xb1\x0a\x77\x72\x5a\xcb\xbc\x15\xa5\xcb\x57\xef\x7b\x5d\x46\xe7\xee\xeb\x2c\x7c\x20\xa6\x02\x85\x8f\xd6\x22\x8d\xb3\xc4\x8f\xc8\x39\x53\x86\xb5\x5f\x17\x6c\x1c\x0a\x88\x89\x84\xe4\xf3\x7e\xac\xb3\x92\x4a\x15\xd5\xda\xda\x05\x52\xdb\xcc\x64\xd5\xdf\x32\xe1\x34\x5e\xde\xb0\x82\xf7\x80\x67\x11\xd7\xd5\x46\x3b\xf1\xcb\x1f\xbf\xbd\x66\xed\x24\xcc\xe1\x3f\xfe\xa3\xe1\xc3\x02\x6f\xc8\xf1\x96\xe8\xef\xa2\xfe\xf1\x77\x00\x00\x00\xff\xff\x0a\x8d\x33\x59\xc9\x08\x00\x00")

func templates_deleterealm_html_bytes() ([]byte, error) {
	return bindata_read(
		_templates_deleterealm_html,
		"templates/deleteRealm.html",
	)
}

func templates_deleterealm_html() (*asset, error) {
	bytes, err := templates_deleterealm_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/deleteRealm.html", size: 2249, mode: os.FileMode(420), modTime: time.Unix(1441448238, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_listhosts_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x58\x6d\x6f\xe3\xc6\x11\xfe\xee\x5f\x31\xb7\x31\x2a\x0a\x35\xc9\x5c\x72\x41\x01\x47\xd2\x21\x3d\x1f\xd0\x2b\x8a\x5c\x90\xf3\x21\x9f\xd7\xe2\x4a\xdc\x1c\x45\xb2\xbb\x2b\xdb\xaa\xa0\xff\xde\x99\xdd\xe5\x3b\x29\xfb\xae\x09\x8a\xa2\xf9\x60\x8b\xe4\x3e\xb3\x33\xf3\xec\xbc\x91\xc7\xa3\xdc\x40\xf4\xb7\x42\x1b\x7d\x3a\x5d\x2c\x0c\xbf\xcb\x04\xac\x33\xae\xf5\x92\xd9\x1b\xb6\xba\x00\x38\x1e\x15\xcf\xb7\xa2\x01\x36\x8f\x2e\x65\xf2\x78\x05\x97\x3c\x49\x14\x5c\x2f\x21\xfa\x01\x2f\x1c\x62\x61\x14\xc9\x12\x14\x75\x88\x7f\x5a\x28\x7c\x6d\xd7\x68\x35\x01\x55\x3c\xe8\x92\xe7\x4b\x76\x3c\x66\x22\xaf\x65\xd9\xea\x78\xb4\x9a\x72\xbe\x13\xa7\xd3\x22\x36\xc9\xea\x59\x32\x37\x42\xaf\x95\x2c\x8d\x2c\xf2\xb6\xd8\xf1\x28\xf2\xa4\x51\x8b\x48\x6b\x6e\x03\xc1\x5f\xe5\xdc\xac\x80\xd5\x15\xae\x10\x09\xab\x8b\xfa\x41\x22\xef\x2b\x7e\xd0\x14\xcb\x4e\xfb\xd9\xba\xc8\x42\xbd\x0b\x5f\x81\xbf\x28\x36\x1b\x2d\x0c\xde\x1b\xf1\x68\xc2\xb5\xc8\x8d\x50\xac\x45\x4b\x5e\x98\x36\xab\xb8\x59\xb9\x5a\xc8\xd5\x6d\x2a\x35\x28\xc1\xb3\x1d\xa4\x5c\x23\x0a\x52\xc2\xc0\x41\x98\x08\x7e\xe1\xb9\x01\x53\xc0\x46\x3e\x82\x49\xb9\x79\xbd\x88\xe5\x6a\x11\x97\x23\xde\xde\xed\x8d\x29\x72\x30\x87\x52\x2c\x99\xbb\x61\x95\xa9\x77\x26\x07\xfc\x0b\x4b\x25\x77\x5c\x1d\x18\x24\xdc\xf0\xd0\x14\xdb\x6d\x86\xe0\x5d\x91\xf0\xac\x7a\xc6\xd5\x56\x98\x25\xfb\x6a\x8d\x26\x19\xf1\x5e\xbd\x4d\xa4\xf1\x5e\x00\xfc\x28\x1e\x80\x3c\x70\x1a\x63\xa7\xc5\xd1\x8a\xc4\xac\x2e\xfc\x8f\xa3\x4e\x26\x4b\x86\xe4\xd3\xa9\xdd\x8a\x5d\x99\xe1\x76\xb5\x41\xe4\x22\x2d\x30\xd0\xe6\x40\x36\x24\x52\x23\xe2\x70\x9d\x17\xb9\x8b\xc3\x45\xaa\x62\xfb\xcb\x6b\xbe\xb3\x42\xe3\xda\x9f\x8c\xdc\x09\xfd\xfd\x22\xe6\xfd\x03\xd9\x14\x6a\x17\x6e\x55\xb1\x2f\xbd\xc1\x8b\x8c\xdf\x89\xac\x77\x5e\xdf\xe0\x79\xe5\x46\xe1\x8d\x5d\x65\x2b\xb2\x43\x68\xbd\x88\xed\xbd\x97\x1c\x9e\xf3\xcb\xaf\x6b\x1a\x16\x32\x2f\xf7\xc6\x53\x4d\xa7\xcd\x3a\x26\xf8\xfd\xed\x39\x86\xdc\xed\xce\x20\xf6\x3b\x3b\x8a\x5a\x17\xbf\x8d\x17\xad\x84\xf8\x7d\x3d\x09\x13\xd4\x34\xe9\x4e\x1d\x01\x2f\xc2\x10\x7e\x52\x82\x02\xd7\x86\x52\xa1\x20\x0c\x57\x9d\xa4\xf2\x71\x47\x71\xd2\x89\x36\xc0\x44\x94\x79\x22\x1e\x97\x2c\x7c\xc9\xb0\x0c\xb8\x00\xe1\x59\xb1\x65\xc0\x95\xe4\xce\xe7\x4c\x24\x77\x87\xae\xe8\xad\x34\xbe\x8c\x0d\xf4\x84\x6e\x03\x70\x37\xd9\xb6\xde\xb7\x58\xef\x77\x98\xab\x6c\x48\x97\x83\x12\x07\xcd\xfa\x18\x22\x15\x3c\xa9\x53\xfd\xc9\x5c\x74\x61\xec\xb2\x0d\xa3\x7e\x27\x5b\x54\x34\xce\x2d\xd9\x1b\x17\xee\x0b\x2a\x81\x6e\x21\x95\x49\x22\xb0\x1c\x1a\xb5\x6f\xe7\x01\x01\x56\xed\x64\xf4\x46\xa4\xaf\xba\x66\x1a\x4b\xce\x80\x6e\xcf\x59\x95\xda\x8b\x38\x7d\x55\xbb\x5a\x1d\xee\xb8\xdf\x77\x45\x72\x68\x79\xdd\x68\x1e\x29\x9c\x63\x6b\x3e\x1c\xff\xd2\x01\x50\x59\xb4\x36\x0a\xa5\x0a\x55\xb3\xc6\x33\xa1\x0c\xd8\xff\x61\x42\xdd\x68\x58\x3a\xc0\xd5\x8e\xba\x3a\xd6\xfb\x51\x28\x77\xc2\x3a\x2d\x94\xfc\x17\x1e\x2b\x52\xde\x85\xd6\x09\x41\x06\x50\xd0\xbf\xbb\x61\xfe\x14\x1d\xf9\x0c\xee\x79\xb6\xc7\x5b\x16\x0f\x24\xcf\xe5\x70\x07\xe8\xf2\x19\x31\x4e\x07\xb5\x3e\xf6\x54\x7a\x57\x3d\xb2\x93\xdb\x53\xea\x87\x79\x3e\xe2\xe2\x13\x39\xcf\x6a\x0e\x9c\x7d\x4d\x4e\xbe\x1c\xfa\xde\x0b\x95\xf3\x0f\xbf\x84\x27\x57\x73\xbe\xb0\x04\x7e\x21\x4d\x44\x0d\xc7\x44\x99\x66\xc7\x59\x45\x63\xca\x92\x7d\xdb\xa6\xe8\x1b\x0a\xc3\x4a\xfe\x3f\x22\x8b\xca\x28\x9d\x3d\xf8\xea\x2b\xb4\x2d\xa3\x23\x4e\x55\xc7\x65\xa7\x24\xd2\x3f\xb6\xdd\x73\x86\x84\x44\x6c\xf8\x3e\x33\xac\xdd\xc0\xa9\x83\x51\xa3\xac\xcc\x18\x96\x1b\xe7\x02\x71\xd4\x49\x77\xdf\x0e\xce\x1e\xc0\x77\xfd\x02\xd0\x82\x60\x6d\xc3\x18\xb0\xff\x43\x99\x6f\x8a\x61\xc2\xf6\xc1\xb6\x1c\xcb\x7c\xcb\x56\xbf\xe0\xc0\x34\xd3\xc0\x6d\xfb\x7a\xfd\x64\x30\x3a\xe9\x5e\x51\xab\x81\xe5\x58\x8c\xfc\x60\xb7\x06\x1c\xe0\xb0\x46\x63\x93\x90\xe6\x00\x48\xef\xa1\xd8\x2b\xc8\x85\x79\x28\xd4\x27\x3b\xb6\xb9\xc9\xce\x3d\x18\xd9\x06\x83\x2a\x17\x6b\x23\xef\x51\x3e\x82\x8f\x79\x26\x3f\x09\x28\x6d\xf3\xc4\xf3\x7e\x48\xe5\x3a\x85\x35\x6a\xb8\x13\x23\xc2\x3c\xd9\xc9\x5c\x6a\xa3\x38\x6e\x20\x68\xaf\xb5\x28\x8d\xbe\xf2\x63\x24\x46\x20\x96\xcd\x07\x7e\x70\x43\xe6\xc8\x06\x26\x45\xb6\x34\x04\x26\x2d\xf6\xdb\x14\x6f\xc5\x01\x76\x72\x9b\x1a\xd4\x07\x8c\x84\xb0\xea\x49\x65\xf6\xa3\xd2\x3b\xbe\x46\x79\xa1\xe7\xd1\x48\x98\x8f\x90\x36\x4e\xe4\x07\x89\x03\xa2\xf0\x26\xa7\x1c\xfd\xe0\xa0\xd1\x2c\x7c\xe6\x23\xee\x0a\x30\xe2\xb0\x7b\x2b\x72\x91\xc0\x8f\x23\xdb\x60\x03\xd0\x60\xd9\xc3\x9a\x82\xe3\xb7\xb6\xb4\xd9\xfd\xb4\xb8\x17\x8a\x67\x4d\x1e\x3d\xcb\xde\x91\xa0\x19\x3c\xea\x3d\xe8\xdf\x0e\xda\xe6\xa6\x28\x4c\x67\x5c\xf8\xdc\xbc\x6c\xea\xcc\x77\xe3\x73\xc4\xea\x0d\xc7\x20\xc8\xc6\x92\xb4\xd2\x44\xb9\xad\xf7\x77\x3b\x69\xde\xd8\x59\x80\xf5\x74\x37\x3a\xbe\x9d\x7c\x8b\x58\x39\xd1\xe7\xa9\xf1\x93\xdd\x84\x92\x57\xd3\x4a\x3e\xe0\xe9\x8d\x4c\x37\x9d\xd1\xa4\xb9\x99\x9c\x47\x5d\x6b\xc0\x95\xcb\xa0\x1a\xf9\xe6\x11\xda\x9f\x1c\x82\xcd\x3e\x5f\x53\xd3\x08\xe6\x70\xa4\x4d\xe2\x18\x9c\x67\xf1\xc7\x12\xe9\xb5\x49\x57\x61\xc0\x17\xc4\x0a\x0b\x38\x10\x28\x1b\x54\xb0\xc4\xad\xd9\x57\xfd\x37\x9e\x79\x84\x03\x5f\x2e\x82\xf9\xf7\x0e\x4e\xd0\x68\xad\x75\x50\xcd\x2d\xec\x0a\xd8\x5d\x56\xac\x3f\xb1\x2e\x24\x95\x19\x46\x6a\x1e\xb0\xc8\x4d\x8c\xb4\x91\x5c\x7f\x1a\x58\x5b\x4b\x28\xb1\x2b\xee\x1b\x45\xa7\xea\x82\xac\x6a\x1a\xc3\x3c\xe2\x65\x89\xaf\x8d\x01\xc9\x54\x10\x25\xcc\x5e\x59\xdf\x94\x7d\x62\x5f\x29\x5b\xde\x50\xf9\x9f\xd6\x5f\x53\xe2\x64\xf1\xa7\x12\xef\x8c\xf5\xf3\x08\x85\x66\x3a\x2d\x1e\xa2\x3b\x1d\xd9\x48\x9d\x5d\xd5\xc4\x06\x98\x9f\x78\x24\x6d\x56\x8d\x92\x5b\x1c\xf4\x2c\xb1\x76\x15\x5d\x24\x4e\x93\x5b\xfb\x92\x5a\x19\x4f\x50\x3b\xab\x25\x88\xf4\x32\x11\xa5\x45\x30\xb3\xef\x2d\x32\x99\xf5\xa1\x34\xd2\x8c\x83\x69\x65\x00\xa7\xc1\x62\x1c\x4e\x13\x00\xc2\x2d\xfa\xa2\xf5\x9f\x24\xad\x87\xd6\x78\xac\xb0\xba\xda\x53\x6e\x20\xf0\xd6\xbe\x58\x42\xbe\xcf\xb2\xd6\x39\x5a\x91\x68\x83\x49\xe1\xcf\x0c\xe7\xcf\x79\x84\x23\xa7\x17\xf1\xd4\x0e\xa0\xc3\x79\x7e\x1e\xa5\x66\x97\x05\x8c\x9e\x00\x83\x3f\xd7\x6e\x57\x76\x8c\x28\xb3\x83\x5e\xa3\xee\x0c\xda\x0e\x3e\x0d\x92\xf8\x99\x40\x76\x6a\xcc\x7c\x10\xf8\x76\x64\x3f\x2b\xea\x43\xa7\x2f\x28\xb1\x49\xb6\x44\x4f\x20\x32\x2d\x26\x88\x9c\x66\xc7\xd9\x65\x07\xac\x29\x2b\x7a\xc4\x30\x36\x7f\x8a\x11\x76\xde\xa1\x49\x2e\x7a\x2e\x7d\x0e\x1b\x1d\x1a\x4f\x17\x4d\xf6\x9f\x49\xc2\x7c\x34\x0b\xeb\x60\xbc\xec\xfa\xbe\xc1\x9a\xa9\x47\x32\xbc\xef\xd3\x44\x89\x18\x81\x62\xd5\x78\x43\x25\xdf\x3a\x42\x5f\xde\x12\xd6\xce\x3b\xaa\x45\xda\xd7\xd4\x76\xf5\x6a\xd5\xc5\xfa\x23\xd2\x3c\xda\xf1\xb2\xd1\x2a\xaf\x80\xb7\x8b\xe3\x20\x07\xeb\x82\x77\x6c\x5a\x96\x9f\x0b\xae\x81\x7b\xc6\xa3\xce\xe7\x1b\x64\x40\x2a\x6d\x02\x77\xc4\xf3\xab\x46\x90\x4e\x7e\x42\x2a\xf4\x51\x31\x2e\x7a\xaa\x0b\x75\x84\xd5\x2c\xe8\xd6\xe2\xaa\x76\x47\xfc\x57\xfe\x18\xd4\x76\x52\xff\xbc\x86\xd9\x4f\xef\x3f\xdc\xce\xea\x8d\xf6\x2a\xc3\x67\x31\x2f\x65\x6c\xbf\x23\xea\xf8\x78\x8c\x7e\xa6\xab\x77\x37\xa7\x53\x6c\x87\xaa\x06\x4d\xd5\xeb\x1a\xfe\xfe\xe1\xfd\x8f\x11\x0e\x8d\x38\x63\xc9\xcd\x21\x68\x11\x51\x1d\xfa\x75\x3f\x04\xc6\x1c\xf7\xaf\x5b\x0e\xdb\xca\x81\x36\xae\x9e\xb8\xae\xdd\xa1\x36\x04\x34\x28\xff\x91\xe5\xd6\xba\xc7\xb0\x43\x61\x1c\x71\xda\x39\xfe\x55\xe3\xa4\xd0\x31\xde\x83\xda\x0b\x48\x61\x42\x4d\xb6\x0e\x01\xc2\xb5\x42\xe0\x01\xcf\x06\xdb\x0e\x76\x59\xbb\x29\xf5\x91\x82\x27\x01\x7d\x48\x69\xda\x65\xb4\xe1\x32\x6b\xb6\x10\x4a\xb5\x76\x20\xff\xdc\x17\x89\x61\xf6\x75\xbb\x77\x17\x6b\xeb\x0c\xde\xa0\x4a\x5d\x16\xb9\x16\x96\x78\xbb\xda\x15\xe8\x65\x87\x6b\xe6\x53\x09\x72\x9a\x4a\xc4\xaa\x3e\x3c\x99\x86\x1e\x78\x26\x09\xa7\x42\xef\xe3\x67\x46\x5e\x3c\xc3\xee\x73\xd9\xef\x67\xf3\xff\x56\x3c\xfe\x11\x74\xbf\x51\xd0\xe1\x94\x7c\x23\x32\x41\x66\x57\x31\x98\xd0\xbd\xf8\x5d\x07\xbd\x72\xf3\x38\x32\xe7\xb9\x77\xe5\xfe\xa4\x87\xd8\x09\x64\x07\x36\x3e\xa7\x75\x9a\xaf\x93\xba\x2d\x6e\x2a\x07\x2d\xc3\xb8\x7f\x85\x46\x32\xfe\x5a\x20\xbf\x0f\xd0\xee\xb6\x33\xed\xdf\xe2\xe1\xdd\x0d\xe8\xac\x30\x10\x42\xce\xf1\x25\xdb\x1c\x5e\x34\x09\xe9\x20\x75\x66\x58\x0f\xa7\xf2\xbb\x36\xe0\xe9\x0c\xaf\xa1\xe7\x72\xbc\x46\xff\x2c\xd6\x7b\xa5\xe5\xbd\x78\x96\xd8\x78\x69\xb8\x79\xfb\x8f\xb7\xb7\x6f\x9f\x5d\x1d\xaa\x0f\x1c\x75\x81\xe8\x11\xf1\x3f\x94\xa8\xf6\xbb\x74\xc0\x1c\x77\x40\x48\x91\x5c\xdb\xb1\xfb\xa9\x2c\x7c\x96\xee\x4e\x30\x9c\x3d\xb4\xff\x87\xb0\xc0\xc7\xb3\xd7\xaa\x32\x6c\xf6\x47\x94\xf4\xa3\x84\xfe\x16\x71\xf5\xc1\xe3\xdf\x01\x00\x00\xff\xff\x4f\x04\xae\xee\xf7\x1f\x00\x00")

func templates_listhosts_html_bytes() ([]byte, error) {
	return bindata_read(
		_templates_listhosts_html,
		"templates/listHosts.html",
	)
}

func templates_listhosts_html() (*asset, error) {
	bytes, err := templates_listhosts_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/listHosts.html", size: 8183, mode: os.FileMode(420), modTime: time.Unix(1441500791, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_listprefixes_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x58\x5b\x73\xdb\xb8\x15\x7e\xcf\xaf\x40\xb0\x3b\x95\xd4\x35\xc9\xcd\x26\x99\x4e\x6d\x49\x99\x34\xce\x83\x3b\x3b\x49\x66\xe3\x9d\x4c\x1f\x21\x12\x12\x11\x43\x04\x0b\x80\xb6\x55\x8d\xfe\x7b\x0f\x6e\xbc\x4b\x76\xd2\xe4\xa9\x79\xb0\x05\x02\x1f\xcf\x0d\xdf\x39\x38\xe0\x7e\x9f\xd1\x35\x2b\x28\xc2\x1f\x24\x0c\xee\xf1\xe1\xf0\x64\xae\xe5\xf2\x09\x42\x73\x9d\xa1\x94\x13\xa5\x16\x38\x15\x3c\x52\xdb\xe8\x39\x46\x4a\xef\x38\x5d\xe0\xb5\x28\x74\xb4\x26\x5b\xc6\x77\xe7\x68\x2b\x0a\xa1\x4a\x92\xd2\x0b\x54\x92\x2c\x63\xc5\x26\xe2\x74\xad\xcf\x51\x4a\x78\x3a\xdd\xef\xe3\x4b\x5a\xea\xfc\x70\x40\x7f\x45\xcf\xe2\x97\x74\x3b\xc3\x46\x3c\x42\xb0\xe2\x94\xfa\x1f\x50\x6d\xa6\xe7\x19\xbb\x0d\x8a\x33\x29\xca\x4c\xdc\x15\xb5\xe2\x8c\xa9\x92\x13\x50\xca\x0a\x0e\x66\x7b\x49\xf0\xd2\xaa\xd2\x5a\x14\xe1\xbd\x95\x2e\x10\xfc\x45\xe0\x1c\xa9\xb8\xb6\xe3\x7b\x85\x82\xb8\x48\x8b\xcd\x86\xd3\x5a\xea\x8a\xa4\x37\x1b\x29\xaa\x22\x8b\xd8\x96\x6c\xe8\x39\x2a\x44\x01\xee\xac\x84\xcc\xa8\x3c\x47\xbf\x9a\xe1\x7d\xa4\x72\x02\x6f\xbb\x45\x8c\xf4\xae\x34\xaf\x5a\xbd\x18\x65\x44\x13\x2f\xb6\x6d\x36\x91\x8c\x44\x39\x51\xa5\x28\xab\x72\x81\xb5\xac\xa8\x9f\xa4\xf7\x25\x29\x32\x9a\xf9\xc9\xe0\x08\xb8\x02\xb1\xac\x1d\xd9\xf0\x5d\x99\xb3\x14\x3c\xab\x47\x51\x2a\x36\xad\x27\xb5\x25\x9c\x53\x89\x51\x52\xc7\x22\x71\x46\xd5\xcf\x15\xef\xc7\x33\xda\xd2\xa2\x6a\xeb\xe4\x6c\x39\x27\x5d\x27\xb6\x22\x23\x3c\x38\x46\xe4\x86\xea\x05\xfe\x29\x95\x94\x68\xfa\x5e\xbe\xcd\x98\xf6\x6b\xa5\xdd\xbc\x05\x1e\x6e\x67\x07\x10\xb1\xcc\x62\xae\xb2\xfe\x42\x46\x55\x6a\x97\x2e\x61\x20\x59\xa9\x99\x28\x00\xb3\x34\x3a\xe6\x09\x59\xce\x13\xb0\xee\xcb\x4d\xcd\x28\xa7\x9a\xfe\x0f\x46\x2e\x2f\xad\x84\xbe\x09\xf3\xa4\xe2\x6e\x3c\x4f\x80\xaa\x81\xcb\x6c\x8d\xa6\xaa\x5a\x39\xb1\x54\xa1\xae\x9e\xd9\x0f\x72\x3f\x8e\xdc\x25\xaf\xd4\x77\x60\xf7\x00\x92\x53\x02\xde\xe3\xe5\x6b\xce\x45\x0a\x94\x46\x24\x8e\xe3\x2e\xd3\xf6\x7b\x49\x8a\x0d\x7d\xcc\xb6\xb6\x88\x99\xc3\x02\xb0\x0f\x2f\x13\xe0\xd1\xe1\x30\x24\xf0\x7e\x4f\x8b\xac\x7e\xef\x08\x9b\x02\x64\x9e\xe8\x6c\xbc\x18\xff\x1d\x2f\xfb\x29\xe3\xc0\xf0\x1f\xea\x77\x30\x3e\x7e\x93\x33\x9e\x49\x0a\xcb\x30\xa7\xe9\x16\x18\xa6\x9b\x72\x8f\x62\x3b\xef\xd4\x85\x5f\x38\x01\xc8\x8a\xd3\xa0\xd0\x3e\xd8\x70\xd6\x42\x43\x38\xac\x8d\xc7\xc4\x36\x7e\x80\x49\x46\x06\xd8\xd6\xa2\xbf\x14\x77\x56\x68\x7b\xce\xfb\xf6\x02\xf9\x81\x58\xaf\x15\xd5\xf0\xac\xe9\xbd\x8e\x52\x5a\x68\xb3\x67\x4d\xc6\x15\x42\xf7\x8c\x01\x79\xe5\x72\xce\x96\xd7\x39\x53\x08\x8a\x15\xdf\x22\x60\x28\x00\x51\x19\xb6\x70\x47\x75\x8c\x3e\x91\x42\x23\x2d\x10\x4c\x21\x9d\x13\xfd\x6a\x9e\xc0\xf6\x25\x65\x7f\x03\x9a\xec\xeb\xa6\x44\x2f\x17\x4b\x09\xb9\x25\x77\xf8\x4b\x4b\x68\xa0\xc5\x3b\x7a\x87\x9c\x1f\x4f\xfa\x24\xf7\xbc\xf0\x3f\x4f\xe6\x4f\xa3\xc8\x43\x91\x15\x25\x24\x8a\xa2\x6e\x68\xbd\x5e\x53\xcc\xda\xda\x3e\x31\x30\x1c\x76\x82\x41\x6a\x42\x2d\x8c\x9e\x61\x24\x85\x2b\x3c\x84\x8b\x8d\xcf\x5d\x4e\x56\x14\x72\x2e\x5b\xed\xba\x6f\x5f\x33\xed\x69\x30\x50\x15\x39\x01\xc8\x3d\xf0\x4d\x2d\x57\xa4\x15\xe4\x62\x70\x73\xf8\x1e\xa4\xb8\x6e\xd6\xc7\x10\x21\x4f\x9b\x34\x3b\xb5\x1d\x29\x17\x2a\x94\x7c\xa8\xa6\x5b\xd6\x8a\x46\xe3\xdc\x02\xbf\xb1\xb8\xa5\xab\x46\xae\x8c\xb1\x2c\xa3\x45\xa8\x57\x7f\xd1\x6c\x4b\xd5\xc5\x3c\x31\x80\x65\xbf\xe4\x80\x11\xf9\x8b\xae\x99\xda\x04\x07\x6d\x98\x1b\x0c\x43\xef\x83\xd7\x6c\xf3\x3c\xc9\x5f\x34\x25\xad\xce\xfc\xb1\x10\xac\x44\xb6\x6b\x05\xa0\x31\x62\x24\x99\xc6\xd6\x7c\x2e\xfd\xad\x03\x30\x79\x12\x00\x04\x2a\xac\x46\xf6\x7f\x94\x99\x04\x97\xc6\x13\x2a\xa5\x90\xc3\xb3\xc9\x9e\x0f\x4d\xa6\xd4\xd2\xd6\x42\x6e\x83\x40\x33\x8e\x72\x21\xd9\x7f\x60\x7f\x21\xf6\x5d\x28\x80\x59\x51\x56\xba\x3e\x06\x58\x73\xfa\x86\x93\xc7\x6d\x07\x46\xb7\x84\x57\xf0\x88\x93\x81\x88\x96\x83\x56\x9d\x39\xe2\xca\x81\x26\x53\x96\xcd\x96\x23\xc0\x2c\x70\xe9\xab\x53\x37\x30\xbf\x21\x43\x43\x60\xac\x63\x07\x5e\x86\x1d\xb2\x8f\x23\x12\x87\xb1\x7d\xf6\xeb\x88\xe6\xda\x4f\xe7\x92\x29\x61\xb8\x63\xb2\x57\x8b\xea\x00\xb4\xb3\xf3\xd9\xd0\xe7\x1e\x53\x4e\x4f\x7e\x4d\x7c\x4c\x27\xf6\x60\x74\x5a\x47\xce\xb7\x08\x91\x09\x0b\x81\x4c\x39\x16\x19\x67\x13\xf0\x1b\xd6\x9e\xb7\x03\xf4\x9b\x61\x61\x78\xfb\xeb\x43\x35\x4f\x8c\xc6\x4e\xee\xf8\x4a\x7b\xd2\x9d\x97\xfd\x6c\x6a\x41\xa0\x66\x40\x44\xed\xff\x88\x15\x6b\x31\xe4\x7f\x1f\x6c\xcb\x1c\x5c\x9c\xf0\xf2\x13\x9c\x45\x13\x85\x88\x3f\xae\x5e\x3d\xb8\xb9\xee\xfd\x5e\x8d\xa8\x81\xe5\x58\xcc\x5f\x7b\xe1\x88\x19\x45\x26\xd6\x04\xda\x4d\x69\x38\x80\xae\x3e\x20\xb8\xc3\x49\xaa\x14\x55\xf1\x48\x50\x47\x04\x8e\x2b\xb9\xce\xe9\x0e\x6e\x80\x05\x1c\xc2\x6b\x4e\x53\x6d\x5c\xca\x77\x8a\xc1\xa5\xd0\x9e\xcb\x4c\xef\xd0\x94\xc6\x9b\x18\x16\x7e\x7f\xfd\x0e\x41\x93\x55\x50\x3d\x3b\x43\x42\x8e\x48\xd3\x41\xda\xe7\x4a\x41\xc7\x0b\xed\x1a\xd4\xed\x6c\xcb\x0a\xa6\xb4\x24\x9a\xdd\xc2\xcc\xca\x0c\x53\xc3\xcb\x20\x78\x44\x50\xd7\x5b\x68\x2e\xd1\x4e\x54\x12\x95\x82\xc1\x8d\x56\x8b\xc8\x0e\x10\xb4\xdf\x37\x4d\x1c\x66\x8f\x0a\xc4\x28\xb7\x7a\x53\xbd\x89\xfe\xe3\xa0\xf4\xaf\x85\xd0\x9d\xd3\xef\x91\xed\x88\xbf\x1a\xb4\xd3\xe5\xe5\xf8\xb1\xb8\x7c\x43\x8a\x94\xf2\xe1\x11\x77\x4c\x53\x23\xf1\xf9\xb1\x2e\xc8\xa4\x2d\x3c\x82\x6c\x7b\x02\x8e\x1c\x9f\x9d\x03\xaf\x79\xa8\x87\xbd\x9e\xa7\xd3\xf4\xb8\x7b\xdd\xc9\xa6\x27\x5c\xfd\xbe\xa8\xd7\x71\x2f\xfd\xe8\x72\x1e\xea\x72\xda\x21\xf6\xd1\x72\x17\xe5\x6f\xd8\xd9\x94\xcb\xd7\x92\x9a\xcc\x84\xb2\xe0\x07\x77\xbe\x61\x77\x8a\x21\x40\xd6\x0c\x57\xc8\xae\x85\xb3\xc0\x9c\x08\xab\xe5\xab\x4e\x72\x7e\x87\xa4\x1a\xcd\xa3\x77\xe2\x54\x0e\x19\x5b\xa1\xc2\x6d\x99\xbe\x0c\xdc\x3c\xa5\xea\x8e\xc8\xc2\x1e\x07\xff\xa2\xea\x0c\xdd\x50\x0a\xbd\x9a\xbf\xc7\x3d\x4e\xcb\x1f\x34\xad\xa4\x82\xb2\xf8\x28\x75\xae\xe9\xf3\xda\x08\x57\x75\x94\x8f\x2b\xfd\xd2\x14\x9e\xbb\xa6\x01\x56\x7e\x9e\x86\x84\x99\xc5\x50\x1f\xb2\xdd\x74\x5d\x15\xb6\x6c\x4f\x67\x68\x6f\x84\x24\x09\x72\x95\x23\xf9\xb3\x84\x58\x53\x33\x77\x4b\xa4\xbb\xee\x50\xb8\xc5\xa0\x05\x48\xe9\xde\xa4\xcc\xdd\x66\x76\xd1\x45\x7e\x20\x52\x2b\xc0\xee\x9d\x99\x96\xbd\xe7\x8d\x94\x78\x0d\xc5\x61\x8a\xe3\xba\x6b\x9f\x9d\x39\xa0\x23\xd5\x55\x36\x8e\x6d\x7a\xd5\x2e\xfe\x14\xba\x86\x9a\x6e\x66\x1c\x68\xfb\x9c\x00\x83\x4d\x19\x47\x99\xb2\x1a\x40\xb6\x41\x1f\x87\xb9\xde\xdd\x01\x0f\x17\xb6\x95\x69\x60\x10\xe8\x89\xca\xc5\x5d\xbc\x52\xb1\x25\xef\xe4\x0c\xd5\x5b\x40\x6f\xcd\xc6\x84\x90\x99\x58\x6a\xc9\x36\xe6\x4a\x60\x62\x6e\x57\x61\xd7\xcc\x65\x3f\xbb\xb6\x37\x5a\x17\x74\x07\x35\xcd\x4e\x13\x6f\x04\x7c\x3c\x0f\xaf\xc7\x26\x69\xa6\x93\x3a\x78\x93\xe0\x45\x13\xbe\x31\x64\x0b\xe6\x42\xd7\x05\x99\xb9\x1a\x72\xf0\x96\x98\x2f\x71\xc6\x92\x98\x65\xe8\xe9\x02\x15\x15\xe7\xb3\xc6\xa6\x16\x35\x62\xbb\xed\x71\xae\xb7\x7c\x8a\x0d\x89\x10\x46\xbf\x58\x27\x62\xa7\x3d\xf8\xd6\x7d\x2b\xd0\x23\x86\xcb\x49\x50\x74\x0a\xd9\xe0\x4e\x49\x35\xae\x34\x48\xf3\x34\x8e\x03\x06\x78\x8b\x3f\x92\x5b\x8a\x03\xe8\x80\x28\x57\xf4\x61\x37\x5d\x62\xf9\x52\x8d\x1f\xe1\x20\x3e\x09\x3a\x09\xa9\x5d\x3a\x06\x68\x7c\x71\x66\x35\xde\x58\xe2\xba\xa7\x21\x71\x8b\x51\xe6\xc2\x1e\x8f\x19\xb8\x86\x62\xa3\xa6\xb3\x8b\xae\xb8\x46\x7f\xca\x59\x7a\x33\x28\x41\x43\x1c\x74\x83\x6f\x4c\xd5\x9c\x9a\xab\xb0\xf9\x9a\x95\xe1\x36\xf5\x25\xfd\x77\x9b\xf9\x95\xe4\xe7\x08\x27\xa4\x64\x89\xfd\x08\xa5\xcc\xd7\xc0\x3f\xcc\xe8\xea\xf2\x70\x48\xc2\xb7\x28\xdc\xb0\x1b\xf8\x7c\x8e\xfe\xf9\xf1\xfd\xbb\x18\xda\x58\xa8\xfd\x6c\xbd\x9b\xee\x9b\x1a\xdf\xad\x31\x83\x2d\x68\xd2\xc4\x25\x8a\xbf\xa0\x9d\x8f\xef\x47\x83\x3e\x34\x43\xdf\xa5\x5c\xc3\x41\x01\xa6\x93\xb2\x84\xc0\x10\x23\x24\xf9\xac\xe0\xcc\xe8\x58\xea\x41\xed\x85\x76\xf6\x1d\x25\xd3\x0c\x2d\x16\x08\xd8\xd0\x04\x0a\xe2\x16\x9b\xb3\x09\x82\x87\x3f\xbc\xff\x78\x8d\x8f\xf0\xb9\x83\xfb\xb3\x86\xb9\x05\x88\x36\xcc\x87\xd1\x2f\x10\x78\x93\xc8\xc7\xad\x68\xb3\x2c\xb4\x1d\x3f\xc7\xe4\x33\xb9\x9f\x82\x90\x59\x9c\x89\x82\x36\x94\x30\x0e\xb7\x2c\xbe\x83\x2a\x0b\xc5\xd3\x7e\x36\x86\x65\x53\x0d\x05\xc9\xa6\xa6\xa5\xaa\x05\xcf\xe2\x35\x61\xbc\x11\x01\xf5\xf8\x48\x09\xb2\x95\x3a\x4e\x3d\xaf\xcc\x27\x16\x7c\x86\xf0\x0a\xa4\xdf\xe0\x99\x4b\x0e\x80\x80\x12\x55\x8a\x42\x51\x4b\x10\xfb\xce\xf1\x8c\x92\x74\x2b\x6e\xe9\x31\xb2\xfa\x34\x30\x3f\xfe\xac\xb5\x2d\x02\x58\x69\x1e\xcd\xb1\xea\xbb\xe7\xd9\x77\x3c\x28\xca\x35\xec\x05\x00\x8f\x1e\x0e\x5d\xec\x11\x64\x07\x66\x0d\xb4\xba\x75\xce\x54\x58\xb1\xb3\xfe\x60\xfc\xa9\xd7\x2c\xfa\xf0\x82\xfc\x80\x86\x60\xfc\x43\x40\x70\xef\x50\xbb\xb5\x80\xeb\xb8\xbf\x2f\x5f\x5d\x22\xc5\x85\x46\x11\x2a\x48\xb5\xc9\xf5\xee\xa9\xe7\x4e\x2d\xfc\xea\x12\xc4\x1a\x8e\x59\x0f\xbb\xa1\x36\xa8\x4e\x0f\x38\x3b\x5a\x7c\x46\xa0\x27\xea\x4f\x83\xee\xb7\x7d\xa7\x5f\x73\x8c\xaf\x69\xa9\x6d\x52\x4f\x2e\xdf\xfe\xfe\xf6\xfa\xed\xe4\xac\x53\xca\x26\x0f\x96\xb2\x64\x02\x29\x37\x12\x88\x6f\x57\x60\xbe\x7b\x5e\xda\x2f\xa0\x53\xec\x6f\x33\x06\x49\xa1\x81\x31\xa5\xe4\xa1\x14\x7c\x94\xee\x0e\x19\x4e\x6e\xda\xff\x03\x2d\x60\x7a\xf2\x4a\x06\xc3\x26\x3f\x58\xd2\x67\x89\xf9\x83\xab\xb9\xbf\x36\xfd\x37\x00\x00\xff\xff\x94\xd4\x52\x79\xa9\x21\x00\x00")

func templates_listprefixes_html_bytes() ([]byte, error) {
	return bindata_read(
		_templates_listprefixes_html,
		"templates/listPrefixes.html",
	)
}

func templates_listprefixes_html() (*asset, error) {
	bytes, err := templates_listprefixes_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/listPrefixes.html", size: 8617, mode: os.FileMode(420), modTime: time.Unix(1441507087, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_main_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x56\xdf\x8f\xe3\x34\x10\x7e\xbf\xbf\xc2\x17\x5e\x71\xac\x65\x85\x84\x56\x49\xa5\xbb\xeb\x09\xf6\x81\x65\x05\x87\x04\x8f\xd3\x78\x9a\x78\x71\xec\x9c\xed\x6c\x5b\xad\xfa\xbf\x33\xce\x8f\xb6\x49\xbb\xe5\x00\xc1\x43\x14\xff\x98\xf9\x3c\xfe\x66\x3e\xdb\xd9\xdb\xe5\x4f\x1f\x3e\xfd\xfe\xf8\x91\x55\xa1\xd6\x8b\x37\x59\xfc\x31\x0d\xa6\xcc\x13\x34\xc9\xe2\x0d\x63\x59\x85\x20\x63\x83\x9a\x35\x06\x60\x45\x05\xce\x63\xc8\x93\x36\xac\xf9\x77\xc9\xe9\x54\x15\x42\xc3\xf1\x73\xab\x9e\xf3\xe4\x37\xfe\xeb\x3b\xfe\xc1\xd6\x0d\x04\xb5\xd2\x98\xb0\xc2\x9a\x80\x86\xfc\xee\x3f\xe6\x28\x4b\x9c\x78\x1a\xa8\x31\x4f\x9e\x15\x6e\x1a\xeb\xc2\x89\xf1\x46\xc9\x50\xe5\x12\x9f\x55\x81\xbc\xeb\x7c\xcd\x94\x51\x41\x81\xe6\xbe\x00\x8d\xf9\x0d\x01\xf5\x48\x41\x05\x8d\x8b\xef\xef\x1f\xdf\xfd\x98\x89\xbe\xd3\x4f\x68\x65\xfe\x60\x0e\x75\x9e\xf8\xb0\xd3\xe8\x2b\x44\x5a\xa3\x72\xb8\xce\x93\x18\xb3\xbf\x13\xa2\x86\x6d\x21\x4d\xba\xb2\x36\xf8\xe0\xa0\x89\x9d\xc2\xd6\xe2\x30\x20\x6e\xd3\xdb\xf4\x5b\x51\x78\x7f\x1c\x4b\x6b\x45\x56\xde\x27\xff\xf5\x42\x3c\x54\x58\xe3\x7c\x39\x5f\x38\xd5\x04\xe6\x5d\x71\x84\x87\x27\xd8\xa6\xa5\xb5\xa5\x46\x68\x94\xef\xa0\xe3\x98\xd0\x6a\xe5\xc5\xd3\xe7\x16\xdd\x4e\xdc\xa4\x37\x37\xe9\xed\xd0\xeb\x50\x9f\x08\x34\x13\x3d\xe0\xe9\x66\xfa\xd8\x45\xa9\x1a\xa8\xbb\xa5\xcf\xb6\xd7\x15\x89\xe8\xab\x24\x36\x57\x56\xee\xc6\x8c\xbc\xe5\x9c\x3d\xc0\xf3\x0a\x1c\xe3\x7c\x80\x35\xf0\xcc\x0a\x0d\xde\xe7\x89\xe9\xa7\xfa\x1f\x97\xb8\x86\x56\x87\xb1\xeb\x03\x55\x4e\xc1\x83\x6d\x86\xed\x92\xaf\x54\x07\xdf\x58\x21\xa0\x0c\xba\xc3\xec\x74\x7e\x40\x89\x71\x4d\x6c\x62\x84\x6d\x08\xd6\xb0\xb0\x6b\xa8\xe6\xfa\x4e\x32\x73\x0b\xb6\x24\x02\xa9\x0c\xb5\x86\xc6\xa3\x4c\x98\x84\x00\xc3\x70\x5c\xbc\x1f\x1f\x87\xc1\x95\x51\x11\x5f\xf5\xde\x09\x03\xa7\x80\xe3\xb6\x01\x23\x51\xe6\xc9\x1a\x74\xb4\xed\x46\x63\xdc\xce\xea\xc3\x52\x93\xd0\x62\x4e\xc9\x69\x0c\xc6\x3b\x6e\x8d\xde\x25\x8b\x4f\x7d\x38\xe4\xa1\x4a\x62\xc5\x1a\x4a\x15\xd9\x5d\x71\x55\xb4\x0e\xef\xe0\xff\x2f\xd3\x4c\xf4\x54\x4e\xc6\xce\x13\xb2\x72\x44\x4a\x32\xaa\x94\xe6\x4f\xd2\x37\xeb\x46\x67\x25\x0f\x44\xcd\x80\xc6\x1c\x1c\x92\x34\x61\xf2\xe5\x45\xad\x59\xfa\x0b\x6a\x2c\x02\xca\x9f\x11\x74\xbd\xdf\x9f\x46\xd6\xea\x13\xbc\xb1\xe6\xe8\x37\xcf\x87\x56\x8b\x0c\x46\x19\xb8\x88\x23\x5e\x5e\xa6\xc0\xe9\xbd\xdc\xef\x45\x43\x26\x6a\x8b\xa4\xa3\xc7\xa1\x95\x09\x20\x9e\x08\xe0\x1f\x22\x56\xd6\x07\x82\xfb\x21\xfe\xfe\x2d\x96\xb4\x35\xa9\x85\xd0\x96\x7d\xe3\x12\x5e\x26\x5a\x3d\xe5\x10\x8d\xfc\x32\xd6\xc6\xa6\x53\x65\x15\xce\x29\x1c\x9d\xa4\xb3\x8d\xb4\x1b\x33\xb3\x20\x1b\x98\x9b\x0c\x5a\x9b\x09\xef\x00\xc0\x48\x43\x27\xea\xed\xa4\x55\x81\x6f\x6c\xd3\x36\x79\x12\x5c\x8b\xaf\xa8\x70\xd1\x91\x72\xb1\x3c\xee\xe8\x68\x58\x9c\xd1\xf7\x40\x57\xd3\x7e\x4f\xd5\xbd\x18\xf8\x98\x28\xa2\x00\x17\xcf\xc0\x41\x0e\x91\xd5\xf9\xce\x8e\x94\x1d\xb6\x56\xa3\x69\xcf\x28\x18\x6b\xb6\x5b\xd5\x4f\x68\x1f\xa7\x49\x3a\x25\x5e\xb1\x78\xa5\x1c\x66\xe5\x49\x23\xe3\x9e\x2e\xd5\xd4\xe5\xcc\x1f\x53\xd9\x13\xef\xb1\x01\x07\xc1\x1e\x65\x49\x6a\x55\xdd\x51\xfb\xb7\x21\xcf\x62\x2e\xe8\x17\x28\x55\x0f\xb8\x49\xd3\xf4\x5a\x98\xd7\x45\x7e\x95\x95\x4b\x22\xa1\xa1\xb8\xee\xb2\xfb\xb3\xce\xf4\x2f\x02\xb8\xb4\xa9\xb9\x8e\xe2\xc8\x35\xa5\xf5\xe7\x5e\xbc\x2c\x45\x4a\x3a\x3a\x9e\x6c\xe3\x9d\x39\x39\x1a\x33\x41\x36\xe3\x05\x7b\xf5\x42\xa4\x4d\x3e\x42\x89\x43\x7c\x03\xc4\x9b\x23\x71\x4b\x5c\xb5\xe5\x38\x7b\x15\x29\xab\x9c\xb8\x74\x09\x3b\xbb\x79\xe5\xfa\xa5\x3d\x70\x5f\xf3\x9b\x6f\x58\xc0\x6d\xe0\x05\x3d\xe6\xe6\xd7\xf0\x49\x4a\xe8\x3d\xb9\x7c\x3f\xd7\xf4\x80\xb4\x0a\x86\xd1\xc7\x95\x59\xdb\xae\xb1\x8d\xa7\x58\x0c\xfd\x8e\x75\x9e\x6c\xf9\x7e\xa2\xbb\xc9\x35\x32\x21\xee\xd0\x3c\xcd\xdb\xeb\x4f\xa9\x2f\x7d\xa9\x3d\xcd\x5f\x84\xf3\xc7\x14\x1d\x1e\xdd\xa3\x88\x9e\x49\xdd\x33\xfb\xcf\x00\x00\x00\xff\xff\x62\x2d\xd1\xd8\x77\x0b\x00\x00")

func templates_main_html_bytes() ([]byte, error) {
	return bindata_read(
		_templates_main_html,
		"templates/main.html",
	)
}

func templates_main_html() (*asset, error) {
	bytes, err := templates_main_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/main.html", size: 2935, mode: os.FileMode(420), modTime: time.Unix(1441435915, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gipam_css = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\x4b\x2a\xc9\xd3\xad\x28\x56\xa8\xe6\x52\x00\x82\x82\xc4\x94\x94\xcc\xbc\x74\xdd\xa2\xcc\xf4\x8c\x12\x2b\x05\xc3\x82\x0a\x6b\x14\xf1\x9c\xd4\x34\x98\x70\x2d\x17\x97\x5e\x7a\x4e\x65\x41\x46\x66\x72\x7e\x9e\x6e\x71\x6e\x62\x4e\x4e\x6a\x11\xd4\x98\xb4\xfc\xbc\x12\xdd\xe2\xcc\xaa\x54\xa0\x5a\x03\x88\x62\x40\x00\x00\x00\xff\xff\x54\x0d\xbb\xcd\x68\x00\x00\x00")

func gipam_css_bytes() ([]byte, error) {
	return bindata_read(
		_gipam_css,
		"gipam.css",
	)
}

func gipam_css() (*asset, error) {
	bytes, err := gipam_css_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "gipam.css", size: 104, mode: os.FileMode(420), modTime: time.Unix(1441431548, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/createPrefix.html": templates_createprefix_html,
	"templates/createRealm.html": templates_createrealm_html,
	"templates/deleteRealm.html": templates_deleterealm_html,
	"templates/listHosts.html": templates_listhosts_html,
	"templates/listPrefixes.html": templates_listprefixes_html,
	"templates/main.html": templates_main_html,
	"gipam.css": gipam_css,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() (*asset, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"gipam.css": &_bintree_t{gipam_css, map[string]*_bintree_t{
	}},
	"templates": &_bintree_t{nil, map[string]*_bintree_t{
		"createPrefix.html": &_bintree_t{templates_createprefix_html, map[string]*_bintree_t{
		}},
		"createRealm.html": &_bintree_t{templates_createrealm_html, map[string]*_bintree_t{
		}},
		"deleteRealm.html": &_bintree_t{templates_deleterealm_html, map[string]*_bintree_t{
		}},
		"listHosts.html": &_bintree_t{templates_listhosts_html, map[string]*_bintree_t{
		}},
		"listPrefixes.html": &_bintree_t{templates_listprefixes_html, map[string]*_bintree_t{
		}},
		"main.html": &_bintree_t{templates_main_html, map[string]*_bintree_t{
		}},
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        if err != nil { // File
                return RestoreAsset(dir, name)
        } else { // Dir
                for _, child := range children {
                        err = RestoreAssets(dir, path.Join(name, child))
                        if err != nil {
                                return err
                        }
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

