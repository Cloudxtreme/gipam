// +build !debug

package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"strings"
	"os"
	"time"
	"io/ioutil"
	"path"
	"path/filepath"
)

func bindata_read(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindata_file_info struct {
	name string
	size int64
	mode os.FileMode
	modTime time.Time
}

func (fi bindata_file_info) Name() string {
	return fi.name
}
func (fi bindata_file_info) Size() int64 {
	return fi.size
}
func (fi bindata_file_info) Mode() os.FileMode {
	return fi.mode
}
func (fi bindata_file_info) ModTime() time.Time {
	return fi.modTime
}
func (fi bindata_file_info) IsDir() bool {
	return false
}
func (fi bindata_file_info) Sys() interface{} {
	return nil
}

var _templates_createprefix_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x55\xdf\x6f\xdb\x36\x10\x7e\xef\x5f\x71\xe0\x0a\x44\xc2\x62\x69\x3f\x30\x0c\xc8\x1c\x0f\x45\xfb\xb2\x61\x68\x03\x34\xc0\x9e\x4f\x22\x15\x33\xa5\x49\x81\xa4\x9c\x68\x81\xff\xf7\x1d\x49\x29\xa2\x1b\x1b\xd9\x86\x3d\xc4\x39\xf2\x3e\xde\xdd\x77\xf7\x91\x5a\x73\xb9\x87\x56\xa1\x73\xd7\xcc\x9a\x07\xb6\x79\x03\x90\xef\xb5\x46\xad\xdc\x6e\xf5\x73\x74\x90\xab\x07\xc9\xaf\x99\xb0\xd6\x58\x36\x63\x50\x09\xeb\x21\xfe\xae\x38\xea\x3b\x41\x2e\xe7\x47\x25\xae\x19\x97\xae\x57\x38\x5e\x81\x36\x5a\xb0\xcd\xba\xee\xa7\x38\x9d\xb1\xbb\xf9\x7c\xb0\x57\x5b\x63\xe5\x5f\x46\x7b\x54\x2c\xa6\x68\xad\x40\x2f\xa6\xb4\xc7\x35\x45\xfc\x9d\x35\x43\xff\xec\x26\x80\xc2\x46\x28\x20\xdf\x35\xeb\xad\xe8\xe4\x23\xfb\x8a\xc3\x0f\xd0\x52\x7c\x4b\x8b\x08\x65\x9b\x9b\x08\x5b\xd7\x71\x99\x45\x7a\x49\xff\xfb\xef\xb2\x4c\x84\x90\xba\x1f\x3c\xf8\xb1\x27\x8a\x5e\x3c\x7a\x76\x54\xda\x94\x26\xf1\x98\x6b\xc1\xc1\x9b\xce\xb4\x83\xab\xb3\x4c\x35\xa5\x7a\x66\x78\xb4\xf8\x37\x74\xb9\x70\xed\xab\x64\x3f\x10\xc8\xca\xde\x4b\xa3\xff\x0b\xe3\xc0\x12\x69\x24\xe7\x89\xa6\x2a\x48\x43\xe4\xfd\x31\x8c\x7a\x3e\xf2\xff\xf0\x7d\x59\xa2\xe9\x3a\x27\x7c\x64\x7a\xb2\xe4\x66\xf0\xde\xe8\x69\x4a\x6e\x68\x76\x72\x99\x53\xe3\x35\xd0\xdf\x8a\x8b\x0e\x07\xe5\xd9\xe6\x7d\x94\xdb\xba\x4e\x87\x5e\x2f\x79\x5d\x87\x32\xe3\x6d\x49\x9b\xa7\xef\xcd\x4f\xf3\xbd\xc9\x5c\x3d\x6a\x9a\x5c\xfc\x5d\x49\xdd\x99\x93\x1a\x4f\xee\xad\x40\x2e\xf5\x1d\xdb\xfc\xb9\x45\x7f\xe1\x00\x21\xc9\xe9\xd7\xb3\xcd\x4b\xe7\x1a\xc3\xc7\xbc\x79\x7d\xde\x98\x77\x53\x10\x90\x21\x60\x98\x21\x4a\x2d\x6c\xd0\x12\xfc\x76\x03\xc8\xb9\x15\xce\x09\x57\x65\x4d\xe8\xcf\x05\xbb\xdd\x8a\x11\x5a\xd4\x40\x21\x95\x68\x7d\x28\x71\x3b\x3a\xd9\xa2\xa2\x2d\x54\xd2\x8f\x50\x88\xea\xae\x22\xc7\x1f\xef\x3e\x02\xcd\x41\x0b\x5f\x5e\x82\xb1\x59\x14\x3f\x47\xb9\x1f\x9c\x87\x46\x00\x99\xc8\x77\x52\x4b\xe7\x2d\x7a\xb9\xa7\x9d\x26\x98\x6d\xd0\xef\x1c\x30\x0b\x70\xcc\x02\x95\x82\xd1\x0c\x16\x7a\x23\xb5\x5f\x79\xb3\x8a\x06\x28\xa9\xbf\x2c\xfc\xca\x93\x04\x8f\x66\x3c\x99\xcf\x46\xb0\xd3\x35\x8a\x88\xb7\x05\xa7\x1b\xbd\x13\xda\x97\x15\x91\xe5\x63\xd1\x0d\x3a\x96\x58\x94\xf0\x94\x02\xbe\x2d\xd8\x37\xd3\x5b\x56\x56\x49\x85\x0b\x4a\xec\xc3\xd9\x19\x0a\x10\xd7\x15\x8d\x27\xfc\xff\x90\xb4\x59\x94\xbf\xcc\xee\x25\x16\x24\x9d\x52\x48\xa2\xf3\x3e\x8c\xbe\x08\x6f\x2d\x36\x4a\x70\x96\x1d\xa8\xf0\x1e\x1f\x8b\xa7\xa5\x53\xe1\x36\x5c\xc1\xc5\xcd\xa7\xcf\xb7\x17\x97\xcb\xf6\x60\x15\xed\xd6\xd8\xcb\x3a\x4c\x6d\xe7\xea\xa7\xa7\xea\x70\xa8\x93\x52\x84\xcb\xb1\x1c\x3d\x5e\xc1\xef\x9f\x3f\x7d\xac\x68\x24\x24\x4f\xd9\x8d\x79\x0a\x98\xf4\x75\x15\xeb\x9d\xde\xbf\xb2\xda\xa3\x2a\xca\xcb\x1c\xc6\x97\x27\x29\x61\xe3\x13\xf2\x12\x79\xc8\x17\x61\xd2\xd4\x9c\xdb\xc8\x83\x61\xdf\x2b\xd2\x5a\x08\x51\xdf\x3b\x6a\xc8\x57\x75\x4e\xb0\x63\xd7\xa1\xac\x38\x7d\x8e\x96\x31\x04\x64\x36\x85\xd4\xe8\xf4\x8d\x2b\xab\x76\xea\x6d\xf8\x8e\xb1\x4b\x60\xf1\x4b\xb6\xb4\x18\xe0\x41\x6a\x6e\x1e\x2a\x65\x52\x1d\xa4\x04\x82\xb6\xa2\x60\x55\xcd\xbe\x0d\xa1\x2b\xc9\x17\x3c\x25\xef\x50\xaa\x4c\x03\xd6\xfe\xe3\xdc\x0d\x25\xf9\x72\x94\x3c\x47\x6f\xfd\x4e\x85\x70\x54\x81\xeb\x8d\x76\x22\xce\x28\x7a\x8f\xf2\xa3\x7a\xc0\xd1\x9d\xd0\xea\x39\x8d\x59\xb1\x33\x7b\x71\x5e\x66\x87\xd9\x3c\x94\x6f\x9e\x97\xeb\x7a\xbe\x29\xf3\x0b\xf9\x77\x00\x00\x00\xff\xff\xbe\x28\x36\xc3\x6c\x08\x00\x00")

func templates_createprefix_html_bytes() ([]byte, error) {
	return bindata_read(
		_templates_createprefix_html,
		"templates/createPrefix.html",
	)
}

func templates_createprefix_html() (*asset, error) {
	bytes, err := templates_createprefix_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/createPrefix.html", size: 2156, mode: os.FileMode(420), modTime: time.Unix(1441421275, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_createrealm_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x55\x6d\x6f\xdb\x36\x10\xfe\xde\x5f\x71\xe0\x0a\xc4\x46\x6d\x69\x2f\x18\x06\x64\x8e\x87\xa2\x45\x81\x0d\x5b\x1b\x34\xc5\x86\x7d\xa4\xc5\x93\xc5\x8e\x22\x39\x92\x8a\xe3\x15\xf9\xef\x3b\x92\x56\x44\x27\xce\xb2\x0d\xfd\x10\x47\xe4\x3d\x7c\xee\xb9\x37\x72\x25\xe4\x35\x34\x8a\x7b\x7f\xc1\x9c\xd9\xb1\xf5\x33\x80\x72\xaf\x31\x6a\xe9\xfb\xe5\x77\xc9\x40\x26\x0b\x52\x5c\x30\x74\xce\x38\x36\x62\xb8\x42\x17\x20\xfd\x2e\x05\xd7\x5b\x24\x93\x0f\x7b\x85\x17\x4c\x48\x6f\x15\xdf\x9f\x83\x36\x1a\xd9\x7a\x55\xdb\x03\x4f\x6b\x5c\x3f\x9e\x8f\xdf\xcb\xce\x38\xf9\x97\xd1\x81\x2b\x96\x5c\x34\x0e\x79\xc0\xf7\xc8\x55\x7f\xf0\x7d\x2c\x2c\x1d\xda\x3a\x33\xd8\x3b\x33\x01\x14\xdf\xa0\x02\xb2\x51\x34\xf1\xe8\x5b\xde\x23\xbb\x17\xcb\xd7\xd0\x90\x1f\x47\x8b\x84\x66\xeb\x08\x5a\xd5\x69\x51\x50\x3d\x4c\xc2\x57\x5f\x16\xae\x08\x21\xb5\x1d\x02\x84\xbd\xa5\x40\x03\xde\x04\x76\xa4\xed\xe0\x24\x47\x53\x88\xe1\x43\x30\xad\x69\x06\x5f\x17\xce\x6a\xf2\x76\x17\xe5\xd1\xe2\x3f\x87\xfc\x1a\x7d\xf3\x64\xc8\x11\xe4\xa4\x0d\xd2\xe8\xff\x13\x79\x8c\x96\x93\xb7\x27\x02\xce\x52\xa8\xad\x08\xf2\x4d\xac\xfe\x78\xee\xf3\x44\xfe\x50\xa7\x69\x5b\x8f\x21\x85\x7b\x52\xf7\x66\x08\xc1\xe8\x43\xc9\xfc\xb0\xe9\xe5\x54\xb4\x4d\xd0\x40\x7f\x4b\x81\x2d\x1f\x54\x60\xeb\x57\xa9\x03\x57\x75\x3e\xf4\xb4\xe4\x55\x1d\x65\xa6\x01\xca\x9b\xa7\x47\xe9\xdb\x71\x94\x0a\x93\xe5\x9a\x6a\x98\x7e\x97\x52\xb7\xe6\x64\xc7\x67\x73\x87\x5c\x48\xbd\x65\xeb\xdf\x3a\x1e\xce\x3c\x70\x48\xa9\xfe\xe1\xd1\xdc\xe5\x63\x1b\x23\xf6\x65\xee\x6c\x99\x97\x97\x99\x03\x64\xa4\xd3\xd4\xa5\xde\xf2\x06\x41\x6a\xd8\x75\xb2\xe9\x68\xb4\x49\x9c\xc3\x56\xde\xa0\x5f\x40\x67\x7c\x48\x20\xe0\x5a\x14\x2c\xc2\xf4\x5c\x6a\xda\x75\x08\x83\x96\x7f\x0e\x58\xc1\x95\xe9\x11\x7e\xbc\x7c\xf9\x8b\x87\x26\xb2\x84\x0e\x3d\xc2\xaf\xef\xdf\xf8\xaa\xc8\xa7\x7d\x4c\xd8\x1b\xe3\xc0\xcb\xde\x2a\x04\x81\x56\x99\x7d\x8f\x3a\x90\x04\x4e\xbb\x7a\x4b\xbb\xec\xd2\x19\xc1\x0e\xf2\x7d\x67\x06\x25\x60\x83\xd0\x1b\x87\x05\x4d\xe8\xb8\x06\xd4\x66\xd8\x76\x15\xfc\x6e\x06\xd2\xa2\x29\xa8\x1d\xdf\x93\x5a\x21\x12\x1c\x14\x15\xdb\x2d\x00\xab\x6d\x45\xfc\xec\x67\xbe\x61\x05\x45\xf6\x40\x05\x06\xbc\xb1\xe8\xe4\x41\x08\xad\x89\x4a\x7a\x13\x4f\x8b\x18\x58\xc2\xd0\x74\x07\x8a\xdc\x95\x04\x66\x08\xa4\xf9\x64\xd8\x47\x4d\x74\xf8\x9c\x3e\xf2\xa4\x26\xf3\xf3\x99\xa0\x9b\x23\xfa\x9e\x57\xa4\x48\xec\x67\xed\xa0\x9b\x38\xc5\xb3\x39\x7c\xca\x6c\xcf\x67\xec\x8b\xf2\xf2\x9c\x57\xb9\xd1\x27\x28\x5e\x47\x82\x11\x0f\x90\xd6\x15\x15\x38\xfe\x7f\x9d\xdb\x7f\x36\xff\x7e\x34\xdf\x23\x84\x3c\x0f\xc4\x4b\xa9\x7b\x15\x7b\x6c\x16\xaf\x79\xbe\x51\x28\x58\x71\xaa\xe2\x1f\xf9\xcd\xec\xd3\x94\x82\x38\x75\xe7\x70\x76\xf9\xee\xea\xc3\xd9\x62\xda\x1e\x9c\xa2\xdd\x9a\x5b\x59\xa7\x24\xfb\xd2\x28\x78\xe0\xe7\xf0\xd3\xd5\xbb\xb7\x95\x0f\x8e\xf2\x27\xdb\x7d\xc9\x09\xa9\x5d\xcf\x93\xc6\xe9\x8e\x9d\x57\xd7\x5c\xcd\xe6\x8b\x12\x27\xa6\x1b\xaf\x80\xa7\x1b\xea\x21\xfc\xb6\x5c\xc4\x7b\x8d\x12\xf3\x21\xc9\x67\xdc\x5a\x25\x1b\x1e\x79\xea\x8f\x9e\xf2\x70\x4f\xed\x01\x76\x6c\xba\x9d\x57\x82\x1e\xc0\xa9\x04\x11\x59\x54\x20\x27\x39\xbf\xaa\xf3\xaa\x39\xa4\x34\xbe\x9c\x6c\x01\x2c\xbd\x9d\x53\x66\x01\x76\x52\x0b\xb3\xab\x94\xc9\x3a\xa8\x15\x08\xda\xe0\x8c\xe5\x0c\xd6\xec\x45\xe4\xaf\xd2\xa2\x92\xe2\x05\xab\xc7\xe9\x2d\x68\x48\x53\xcb\xa5\x2a\xda\xc2\xb9\x7f\x2d\x69\x43\xbe\xff\x38\xd2\x54\xa2\xbb\xd0\xab\x48\x47\x0a\xbc\x35\xda\x63\x2a\x60\xb2\x1e\xf9\xcf\x23\x78\xa2\x87\xff\xb1\xed\x1c\xf6\xe6\x1a\x1f\xef\xbc\xdb\xf1\xf3\x76\xfe\xec\x6e\xb9\xaa\xc7\x31\x1a\x2f\xe7\xbf\x03\x00\x00\xff\xff\x19\x10\xcf\xfc\xfa\x08\x00\x00")

func templates_createrealm_html_bytes() ([]byte, error) {
	return bindata_read(
		_templates_createrealm_html,
		"templates/createRealm.html",
	)
}

func templates_createrealm_html() (*asset, error) {
	bytes, err := templates_createrealm_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/createRealm.html", size: 2298, mode: os.FileMode(420), modTime: time.Unix(1441419292, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_deleterealm_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x55\x5d\xaf\xe3\x34\x10\x7d\xe7\x57\x0c\x66\xa5\xa6\xda\x9b\x44\xda\x27\x74\xb7\xad\x04\x7b\x0b\x5a\x84\x2e\x12\xec\x0b\x8f\x8e\xed\xb4\xe6\x3a\x76\x64\x3b\xfd\x50\xd5\xff\xce\x38\x9f\x4e\x28\x82\x87\x7d\x68\xe3\x8c\x3d\x67\xce\xcc\x9c\x71\x36\x5c\x9e\x80\x29\xea\xdc\x96\x58\x73\x26\xbb\x6f\x00\x62\x1b\x33\x2a\x75\x55\xfa\x3d\xf4\x0b\x53\x96\x4e\xf8\xf4\x03\x01\xe7\xaf\x4a\x6c\x89\x17\x17\x9f\x52\x25\x0f\xfa\x19\x98\xd0\x5e\xd8\x16\x03\x51\xea\x01\x83\x53\x7d\x10\x36\x2d\xa8\x05\xaa\x84\xf5\xdd\x7f\xda\x99\xe1\xf8\x81\xec\x36\xc5\xee\xe5\x87\xd7\x9f\xf7\xbf\xc3\xec\xb1\xc9\x8b\xdd\x26\xaf\x7b\xbc\x88\x55\x4d\xb5\x50\xd0\xfe\xa7\x5c\x94\xb4\x51\xbe\x8f\xfa\xe0\x5c\x5a\x18\x7e\xfd\x6f\xbe\x1d\xe7\x69\x0d\xb0\xbf\x08\xd6\x78\xa9\x0f\xe0\x8f\xd2\x01\x17\x4a\x78\x69\x34\x9c\xa5\x52\xf8\xe6\xbc\x35\x57\xcc\x05\xd7\xd4\x53\x90\x1a\xac\xa0\xaa\x02\x4c\xe6\x76\xcb\x5e\x69\x25\xee\xf7\x90\x41\x06\x5f\x8e\xd4\x47\xb8\x52\x33\xd5\xa0\x3f\xd4\x56\x94\xf2\x22\xdc\x13\x1c\x8d\xf3\xf8\xe0\xa6\xa2\x52\x3b\xa0\x9a\x03\xf5\xde\xca\xa2\xf1\xc2\x05\x00\xe9\x22\x00\x53\x0b\x4b\x5b\x2a\x8c\x6a\x6d\x3c\x14\x02\x1a\xcd\x8d\x16\xdf\x4e\xa9\xe4\x51\x2e\x93\xb5\x34\xb6\x02\xc9\xb1\x29\x21\x1b\xf1\x13\xbe\x92\x38\xe7\xb6\x7a\x61\x9f\x19\x5d\x4a\x5b\xfd\x68\x2e\x64\xa8\x66\xf0\x4d\x0f\xd6\x34\x35\x1c\xa9\x4b\x85\xb5\xc6\xb6\xab\x52\x08\x5e\x50\xf6\x36\x43\x42\x2c\x45\x0b\x6c\x13\xba\x8d\x70\x2f\x6d\x54\xb2\xdb\x87\xc2\x03\xf9\x33\xe4\xfe\x19\xce\x54\x7b\xf0\x66\xac\x69\x57\x47\x2c\xe2\x67\x7e\xbf\x93\xb0\x53\x5b\xc3\x30\xc8\xf3\x26\x6f\x31\x17\x71\xa4\xae\x1b\x04\xb8\xd6\x7d\x7f\xe7\x8c\x31\x34\xa2\x2a\x12\xa7\xd5\xf3\x00\xda\x78\xc3\x4c\x55\x87\xb7\x2d\x41\x71\x77\xa6\xd2\xb0\xc6\x2d\x82\x38\x14\x53\x0c\xf1\xc9\x1a\xe7\xc6\x48\x07\x75\xad\x8f\x12\xb7\x60\x5c\xa5\x56\x54\xe6\x24\x20\x26\x31\x95\x0a\xa8\x95\x34\x3d\x4a\xce\x85\x46\xd6\xb6\xc1\xaa\x6c\xf2\x10\x64\xd6\x8e\x1c\xfb\x31\x33\xa0\x22\xbc\xe9\x88\xb8\xa6\xa8\xa4\x1f\x52\xe9\xd2\xef\x6c\x23\xad\xc2\x6b\xc0\xdf\x30\x6b\x5c\x3a\x5a\x28\xc1\xc9\xae\xf3\xea\x2a\x8d\x22\x6d\x41\xa3\x39\xc8\x03\xe9\x71\xa2\x26\x12\xf1\xf2\x6b\xcf\xb7\x63\x56\xd6\xbe\x0f\xfa\x2e\xe1\xd8\x83\x0a\x07\x74\x9d\x21\x49\x7e\x4d\xca\x46\xb3\xa0\xf9\x64\x7d\x1b\x78\x9e\x30\x62\xdf\x0d\xd8\xa2\x0b\xf9\x6e\xde\xde\xf5\xc7\xe1\x64\x6f\xcf\xde\xc4\xb5\xa9\x23\x28\xb8\x4d\xb5\x95\x25\x24\xc3\xb9\x13\x55\xb8\xb9\xdd\x6e\xff\xa7\x46\x67\x40\x10\x53\x09\x03\x14\x52\x08\x52\xf8\x14\xea\x95\x90\x71\x78\x22\x82\x0b\xaf\x21\x81\x0c\x85\x5f\x27\x64\xec\xdb\x13\x04\xa5\xfc\xab\x5b\xa7\xc9\x75\xc6\x42\x18\x74\xaa\x15\xbd\xa2\x0f\xd1\x78\x35\x3c\x08\x36\x13\xd0\x82\xe4\x10\x32\x92\x0f\x1e\xa1\x9c\xf7\xfb\xc1\xec\x1a\xc6\x44\x08\xb8\x44\xce\x26\x49\x2c\x71\x63\x6d\xcc\x00\xbb\x8d\x47\x90\xf7\x61\x79\x9f\xac\x81\x7e\x74\x85\xad\xb3\x2e\x97\xa9\xb5\xe2\x14\xb4\x13\xb7\xa5\xb5\x60\x41\xdb\xe7\x4b\xf7\xd5\x48\xe2\x38\x41\x00\x0f\xca\x82\xed\x5a\xd4\x84\xac\x17\xfd\xb6\xc2\x37\x56\x3f\xa2\xfc\xb0\xd0\x53\xd2\x13\x62\xe4\xfc\x2e\xa3\x7f\xd1\x4b\x32\x8b\x10\xa6\xfb\x19\x56\x2f\xfb\x5f\xf7\x5f\xf6\xab\xa7\x78\xab\xb1\x0a\x77\x72\x5a\xcb\xbc\x15\xa5\xcb\x57\xef\x7b\x5d\x46\xe7\xee\xeb\x2c\x7c\x20\xa6\x02\x85\x8f\xd6\x22\x8d\xb3\xc4\x8f\xc8\x39\x53\x86\xb5\x5f\x17\x6c\x1c\x0a\x88\x89\x84\xe4\xf3\x7e\xac\xb3\x92\x4a\x15\xd5\xda\xda\x05\x52\xdb\xcc\x64\xd5\xdf\x32\xe1\x34\x5e\xde\xb0\x82\xf7\x80\x67\x11\xd7\xd5\x46\x3b\xf1\xcb\x1f\xbf\xbd\x66\xed\x24\xcc\xe1\x3f\xfe\xa3\xe1\xc3\x02\x6f\xc8\xf1\x96\xe8\xef\xa2\xfe\xf1\x77\x00\x00\x00\xff\xff\x0a\x8d\x33\x59\xc9\x08\x00\x00")

func templates_deleterealm_html_bytes() ([]byte, error) {
	return bindata_read(
		_templates_deleterealm_html,
		"templates/deleteRealm.html",
	)
}

func templates_deleterealm_html() (*asset, error) {
	bytes, err := templates_deleterealm_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/deleteRealm.html", size: 2249, mode: os.FileMode(420), modTime: time.Unix(1441448238, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_listhosts_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x58\xdb\x6e\xdb\x3c\x12\xbe\xcf\x53\x4c\xb9\xc1\xc6\x46\x23\xa9\x47\x2c\xe0\xda\x2e\x16\xed\x02\xed\x5e\x34\xc5\x36\x45\x2f\x17\xb4\x49\xdb\x6c\x64\x51\xa5\xe8\x24\xfe\x0d\xbf\xfb\x3f\x43\xea\x40\x59\x52\x52\x14\xed\x45\x62\x53\xfc\x38\x9c\xe3\x37\x23\x1f\x0e\x6a\x05\xf1\x07\x5d\xd8\xe2\x78\x3c\x9b\x5a\xbe\x48\x25\x2c\x53\x5e\x14\x33\xe6\x16\x6c\x7e\x06\x70\x38\x18\x9e\xad\x65\x03\x6c\x1e\x9d\x2b\x71\x7f\x09\xe7\x5c\x08\x03\x93\x19\xc4\xff\xc6\x2f\x1e\x31\xb5\x86\xce\x12\x14\xef\x90\x3f\x1c\x14\x9e\xb9\x3d\xda\x15\x60\xf4\x5d\x91\xf3\x6c\xc6\x0e\x87\x54\x66\xf5\x59\x36\x3f\x1c\xdc\x4d\x19\xdf\xca\xe3\x71\x9a\x58\x31\xff\xa9\x33\xef\x65\xb1\x34\x2a\xb7\x4a\x67\xe1\xb1\xc3\x41\x66\xa2\xb9\x16\x91\x4e\xdd\x06\x82\x9f\xc6\x9b\x59\x01\xab\x6f\xb8\x43\x4e\x98\x9f\xd5\x0f\x84\xba\xad\xfc\x83\xaa\x38\xef\x84\xcf\x96\x3a\x8d\x8a\x6d\xf4\x0a\xca\x2f\x7a\xb5\x2a\xa4\xc5\xb5\x95\xf7\x36\x5a\xca\xcc\x4a\xc3\x02\xb7\x64\xda\x86\x5e\x45\x61\xf9\x7c\xaa\xe6\xd7\x1b\x55\x80\x91\x3c\xdd\xc2\x86\x17\x88\x82\x0d\x61\x60\x2f\x6d\x0c\xdf\x78\x66\xc1\x6a\x58\xa9\x7b\xb0\x1b\x6e\xdf\x4e\x13\x35\x9f\x26\x79\x8f\xb5\x8b\x9d\xb5\x3a\x03\xbb\xcf\xe5\x8c\xf9\x05\xab\x54\x5d\xd8\x0c\xf0\x2f\xca\x8d\xda\x72\xb3\x67\x20\xb8\xe5\x91\xd5\xeb\x75\x8a\xe0\xad\x16\x3c\xad\x9e\x71\xb3\x96\x76\xc6\xfe\xb1\x44\x95\xac\xbc\x32\xff\x11\xca\x7e\x53\x59\x69\x08\xc0\x27\x79\x07\x64\x84\xbf\x34\xf1\x17\x79\xcf\xa2\x6f\xe6\x67\xe5\x87\xf7\x9e\x12\x33\x46\xfe\xbf\x96\xdb\x3c\x45\x71\xb5\x42\x6b\x15\xd1\x73\x06\x85\xdd\x93\x0a\x42\x15\x08\xd8\x4f\x32\x9d\xf9\x34\x9c\x6e\x4c\xe2\x3e\x79\xed\xee\x54\x17\xb8\xf7\x4f\xab\xb6\xb2\x78\x33\x4d\xf8\x69\x3c\x56\xda\x6c\xa3\xb5\xd1\xbb\xbc\x54\x76\x9a\xf2\x85\x4c\x4f\xc2\xf5\x02\xc3\x95\x59\x83\x0b\xb7\xcb\xe6\x94\x55\xb2\x28\xa6\x89\x5b\x97\x27\xbb\x61\x7e\xfe\xac\x76\xc1\x54\x65\xf9\xce\x96\x9e\xa6\x60\xb3\x96\x0a\xa5\x7c\x28\x6d\x44\xd9\x0c\x92\x52\xae\x77\x4e\xf0\xe5\xf7\xd8\x10\x54\xc3\x1f\xb1\x43\xa0\xfc\x41\x23\xea\x88\x3f\x89\x22\x97\x1a\xe0\x72\x47\x1b\x88\xa2\x79\xab\x8a\xca\x44\xa3\xac\x38\x4d\x2f\xc0\xe2\x53\x99\x90\xf7\x33\x16\x3d\x67\x58\xfa\x3e\x2b\x78\xaa\xd7\x0c\xb8\x51\xdc\x9b\x9a\x4a\xb1\xd8\xb7\x4f\x5f\x2b\x5b\x52\x57\xe7\xaa\xc8\x0b\x00\xbf\x48\xd7\xb5\x5c\xbd\xdc\x6d\xb1\x3e\x59\xd7\x4b\x1e\x4a\xa6\x37\xfb\x7d\x88\x8d\xe4\xa2\x2e\xef\x47\xeb\xcf\xe7\xae\xaf\x30\x4c\xf5\xad\x0a\xbc\xd1\x18\x37\x63\xef\x7c\x8e\x4f\x89\xf6\xfc\xc6\x46\x09\x21\x91\x02\xad\xd9\x85\xc9\x4f\x80\x79\x58\x7d\xa5\x12\x9b\x57\x6d\x35\x2d\x39\x87\x22\xe8\xbe\x74\x5d\x5f\x3a\x8f\x8a\xfa\xb3\x91\xc8\x32\xd3\x64\xf3\xaa\xb6\xba\x0a\x74\xbf\x0b\x16\x5a\xec\x03\x07\x34\x4a\xf4\xf0\x66\xdf\x5e\x99\x90\xff\x6a\x01\x88\x15\x2b\x00\x4f\xa5\xb1\xe0\xfe\x47\x82\x3a\x90\x21\x4b\xa4\x31\xba\x4b\x1c\xe0\x99\xa3\xa6\xc6\x5a\x1a\xa5\x72\x2b\xad\x37\xda\xa8\xbf\x30\xbe\xe8\xfb\x36\xb4\x2e\x88\x86\xa3\x88\x89\x23\x25\x58\x19\x55\x1f\x0c\x06\xb7\x3c\xdd\xe1\x92\x25\x1d\x01\x0f\x95\x72\x0b\xe8\xcb\x1a\x31\x33\x96\x3b\xc7\xb3\xc7\x6a\xbc\xea\x92\xad\x02\x1f\xba\xbc\x5b\xec\x3d\x76\xfe\x44\xe1\x6f\xca\x4b\xc3\xfa\x7c\xde\xb5\xfb\x24\x57\x1e\x7e\xf8\x2b\x3e\xf2\x04\xf4\x8b\x2c\xf8\x8b\x4e\x22\xc7\x70\xac\x95\x87\x49\x91\x86\x94\x19\x7b\x19\x3a\xe8\x05\xe5\x61\x75\xfa\x77\xb9\xaa\xe9\x26\xb2\x20\xf9\x1d\xf8\x34\x21\x05\x5b\xc5\x56\x12\xf3\x83\xd6\xbf\x3e\x2d\xbf\x00\x82\x24\x83\x01\x70\xff\x23\x95\xad\x74\xb7\x60\x4e\xc1\x8e\x17\x55\xb6\x66\xf3\x6f\x38\xad\x5c\x14\xc0\xdd\x34\xf3\xf6\x51\xf3\xfc\xe9\x13\x4a\xa9\x81\x79\x5f\x80\x3e\xe8\x3b\x10\x1a\xf6\x7a\xe7\x46\xab\x9b\x0c\xd7\x77\x78\x6b\x79\x27\xa8\xe2\xd2\x6d\x2a\xa1\xb4\x8d\x7b\xc2\xd0\x91\xda\xeb\xd5\x93\x47\x27\x0f\x4e\x97\x1d\x96\x5c\x69\x6d\x5b\x8d\xe2\x27\x47\x35\x21\x57\x7c\x97\xda\x30\xaf\x5e\xf7\x77\x90\xf9\x3b\x9e\x2d\x65\xda\xed\x06\x43\x37\x35\x12\x5f\x0e\x4d\x88\x94\xdf\xb8\x44\xd9\xae\x59\xf4\x74\x9a\x56\x6f\x68\x16\x83\xc3\x81\x2f\x4d\xdc\x39\x1f\x55\xed\x77\x1c\xa3\x70\xb1\x1f\xad\x76\xd9\x92\x8a\x76\x34\x86\x03\x09\x49\x12\xf0\xd7\x26\x5f\x73\x34\x58\xd2\xb3\x5b\x6e\xfc\x58\x21\x71\x5a\x80\x19\x4a\xe9\x8e\xa8\xe3\x37\x6d\xe4\x67\x6e\x70\x8e\x9e\x79\xa1\x00\xae\x05\x4e\x1a\x29\xf1\x0a\xbd\x30\x62\x71\xdd\x1d\xc7\x97\x1e\x48\xd9\xf3\x51\xf4\x23\xab\x8e\x10\x62\x89\x20\x87\xd1\x8e\x3e\x2b\x38\x71\x46\x3f\xd4\xb1\x49\x05\xab\x2b\xbd\x1f\xdb\x10\x41\x75\x00\x63\xd5\x0f\xa5\x20\x56\x20\xd7\x39\xfb\x61\xbe\xa9\x7a\xe0\xf1\x8d\xa3\x8c\x2a\x2a\xa4\x4c\x39\x23\x8f\x88\xfd\xb8\xca\xa4\x19\x57\x4e\x25\x6f\x67\xf2\x8e\x00\x65\x54\x5a\xf3\xfe\x38\xc6\xd1\x27\x93\x23\x1f\x1a\xa8\xa0\xf1\x12\x85\x55\xbd\x9b\x5d\x02\x53\x59\x8a\x62\x59\x05\x0b\xe2\x17\xd7\xc6\xc6\x3c\xcf\xf1\x7d\x67\x54\xca\xf0\x58\xf7\xf2\x73\x56\x1f\x21\xab\x30\x91\x2e\x8a\x8d\xbe\x8b\x17\x45\xec\x2a\xe4\xe2\xb2\x36\x66\x24\x6f\x29\xf1\x42\xed\xad\x51\x6b\x1a\x2d\x48\x7b\xb7\x8b\x59\x49\xba\x8b\x6b\xf7\x2a\x54\xa9\x44\x50\xe2\xc0\x26\x9f\x00\x99\x65\x52\x1d\x8f\xa9\x32\x47\x17\x65\x7a\x5c\x54\x2e\x0f\x13\xa4\x8b\xa4\xe7\x01\xd4\x27\x47\x8f\x40\xda\xa8\x71\xc7\x52\x21\x7c\xa3\x1c\x91\x42\xb1\x12\xf0\x64\x06\xd9\x2e\x4d\xc7\x8d\x6a\xa1\x07\x5d\x76\xc7\x1b\xbb\x4d\x47\x8c\x6a\x05\x18\x3c\x75\xb6\xc4\x95\x12\x95\x91\xed\x73\xbe\x0e\x62\x9c\x76\xaa\x8b\x86\x71\x24\xa5\x41\x3e\x2c\x97\xcc\x69\xb0\xb4\xea\xc7\x61\xee\x96\x5a\x7f\xe1\xb7\x4d\x72\x0c\xa5\x87\x87\x06\xb0\x30\x71\xfb\x4e\x54\xc8\x23\xc8\xb4\x90\x8f\xfb\xce\x93\x92\x7b\xc5\x19\x50\x26\xf0\x18\x7b\x00\x52\x3b\x6b\x08\x54\x7b\x68\x08\xd0\xb8\xc6\x2b\xf5\x07\x9d\xe3\xaa\xcc\xaf\xba\x35\x96\xf5\x16\x19\xe6\x61\xbf\xcd\x2b\x64\xfe\x02\xc9\xa0\x2d\xb0\x31\x69\x99\xaa\xe5\x4d\xa7\x1f\x74\x71\xa8\xe5\x3b\xea\x5b\x8e\x43\xe8\x57\x1b\xc1\xc2\x3a\xa5\xd2\x09\xeb\xf4\x94\xa4\x7b\x22\xd1\xae\xc2\x72\x8a\x9c\xf4\x07\xa5\xc1\x76\x78\xfa\xd4\xed\x6d\xce\x46\x3a\xdc\xf2\xbc\xb1\x4f\x5d\x82\x0c\x6a\x16\xc0\x48\xbb\x33\x59\xf8\x04\xfc\x4f\x43\xff\x27\xaa\x39\x1c\xe2\xff\xd1\xe2\xe3\xfb\xe3\xf1\x92\xba\xe4\xf5\xd5\xfb\xab\x09\x6c\xf9\x8d\xa4\x51\x78\xa5\xd6\x3b\x43\xce\x08\x4f\x97\xaa\x4c\x40\x76\xfb\x07\xaa\xd3\x36\xa7\x63\xbe\xec\x34\xa8\xce\x89\x63\x9d\x51\xc7\x71\x8c\x7c\x39\x3a\xe5\x29\xd4\xac\xc0\xb7\xee\x18\x5f\xc4\x47\x14\x98\x30\x50\x46\xfe\x08\xe3\xb4\x33\xe9\x04\x58\xc2\x73\x95\x38\xab\x8b\x24\x34\x39\x71\xbf\x8b\xb1\x26\x50\x28\x6c\x02\xff\xfd\x72\xf5\x29\x2e\x90\x34\xb3\xb5\x5a\xed\xfd\x0d\x35\xa4\x7c\x8f\xbf\xc6\xf1\x07\x05\x63\xff\xc0\xfc\xe2\x64\x5a\xf2\xbd\xc0\x49\xa8\x25\xaa\x04\x85\x1b\x21\xd5\x0e\x94\xf9\x18\x66\x33\xc0\xba\x6a\x8c\x40\x9b\x62\x9a\xb7\xd0\x30\xf6\xf9\xea\xcb\x35\x1b\x60\x99\x16\xee\x6b\x0d\xf3\x1b\xe8\x09\x7c\x5e\x7d\x7b\x8a\x4e\x21\xce\x1e\xd2\x21\x2c\xd5\xea\x45\xfc\x3c\xe6\xdf\xf9\xfd\x08\x45\x8c\x63\x41\x2d\xb8\xce\x3a\xe7\xa2\x46\x8f\x3b\x8c\x30\x36\xcb\x54\x7b\xcf\x50\xf7\xd3\x5c\x8c\xe8\x07\x87\x5a\xf0\x38\x5e\x71\x95\x36\x22\x70\x5c\x18\xe8\x35\x6e\x90\xe8\xb4\xf7\x05\x4a\xbf\xc1\xe4\x71\x2c\x84\x10\xbc\xa4\xc8\x31\x2f\xa4\x8b\x9e\x3b\x33\xcc\x73\x46\x6e\xf5\xad\x1c\xaa\xf7\x92\x49\xe8\x83\xfe\xa6\x49\x35\x68\xfe\x1d\x00\x00\xff\xff\x6a\x74\xf5\x27\xef\x16\x00\x00")

func templates_listhosts_html_bytes() ([]byte, error) {
	return bindata_read(
		_templates_listhosts_html,
		"templates/listHosts.html",
	)
}

func templates_listhosts_html() (*asset, error) {
	bytes, err := templates_listhosts_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/listHosts.html", size: 5871, mode: os.FileMode(420), modTime: time.Unix(1441521514, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_listprefixes_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xec\x58\x5f\x73\xdb\xb8\x11\x7f\xcf\xa7\xc0\xa1\x37\x95\xd4\x33\xc9\xcb\x25\x99\x4e\x6d\x49\x99\x4c\x9c\x87\x74\x6e\x92\x4c\xe3\x9b\x4c\x1f\x21\x12\x92\x10\x43\x04\x0b\x80\xb6\x55\x8d\xbe\x7b\x17\xff\x08\xfe\x93\xed\x24\x97\x3e\xe5\xc1\x16\x48\xfc\xb0\xd8\x5d\xec\xfe\x76\xc1\xc3\xa1\xa0\x6b\x56\x52\x84\x3f\x48\x18\xdc\xe1\xe3\xf1\xc9\x5c\xcb\xe5\x13\x84\xe6\xba\x40\x39\x27\x4a\x2d\x70\x2e\x78\xa2\x76\xc9\x33\x8c\x94\xde\x73\xba\xc0\x6b\x51\xea\x64\x4d\x76\x8c\xef\xcf\xd1\x4e\x94\x42\x55\x24\xa7\x17\xa8\x22\x45\xc1\xca\x4d\xc2\xe9\x5a\x9f\xa3\x9c\xf0\x7c\x7a\x38\xa4\x97\xb4\xd2\xdb\xe3\x11\xfd\x0d\x3d\x4d\x5f\xd0\xdd\x0c\x1b\xf1\x08\xc1\x8c\xdb\xd4\xff\xc0\xd6\xe6\xf5\xbc\x60\x37\x61\xe3\x42\x8a\xaa\x10\xb7\x65\xb3\x71\xc1\x54\xc5\x09\x6c\xca\x4a\x0e\x6a\x7b\x49\xb0\x68\x55\x6b\x2d\xca\xb0\x6e\xa5\x4b\x04\x7f\x09\x18\x47\x6a\xae\xed\xf8\x4e\xa1\x20\x2e\xd1\x62\xb3\xe1\xb4\x91\xba\x22\xf9\xf5\x46\x8a\xba\x2c\x12\xb6\x23\x1b\x7a\x8e\x4a\x51\x82\x39\x2b\x21\x0b\x2a\xcf\xd1\xaf\x66\x78\x97\xa8\x2d\x81\xd5\x6e\x12\x23\xbd\xaf\xcc\x52\xbb\x2f\x46\x05\xd1\xc4\x8b\x6d\xab\x4d\x24\x23\xc9\x96\xa8\x4a\x54\x75\xb5\xc0\x5a\xd6\xd4\xbf\xa4\x77\x15\x29\x0b\x5a\xf8\x97\xc1\x10\x30\x05\x7c\xd9\x18\xb2\xe1\xfb\x6a\xcb\x72\xb0\xac\x19\x25\xb9\xd8\xb4\x9e\xd4\x8e\x70\x4e\x25\x46\x59\xe3\x8b\xcc\x29\xd5\x3c\xd7\xbc\xef\xcf\x64\x47\xcb\xba\xbd\x27\x67\xcb\x39\xe9\x1a\xb1\x13\x05\xe1\xc1\x30\x22\x37\x54\x2f\xf0\x5f\x72\x49\x89\xa6\xef\xe5\x9b\x82\xe9\x4f\x2c\xd8\x5d\xd9\xf3\x5b\xe0\xe1\x89\x76\x00\x09\x2b\x2c\xe6\x6d\xd1\x9f\x28\xa8\xca\xed\xd4\x25\x0c\x24\xab\x34\x13\x25\x60\x96\x66\x9b\x79\x46\x96\xf3\x0c\x14\xfc\x72\x6d\x0b\xca\xa9\xa6\xdf\xa6\xe7\xf2\xd2\x0a\xe9\x6b\x31\xcf\x6a\xee\xc6\xf3\x0c\x02\x36\x44\x34\x5b\xa3\xa9\xaa\x57\x4e\x2c\x55\xa8\xbb\xcf\xec\x47\x88\x3f\x2e\xc4\x2b\x5e\xab\xef\x10\xe3\x03\xc8\x96\x12\xb0\x1e\x2f\x5f\x71\x2e\x72\x08\x6c\x44\xd2\x34\xed\x06\xdb\xe1\x20\x49\xb9\xa1\x8f\x39\xd6\x56\x6c\x6e\x61\x02\x02\x10\x2f\x33\x88\xa3\xe3\x71\x18\xc3\x87\x03\x2d\x8b\x66\xdd\x89\x68\x0a\x90\x79\xa6\x8b\x71\x4a\xfe\x07\x5e\xf6\xb3\xc6\x81\xe1\x3f\xb0\x78\x50\x3e\x7d\xbd\x65\xbc\x90\x14\xa6\xe1\x9d\xa6\x3b\x88\x30\x1d\x49\x1f\xa5\xf6\xbd\xdb\x2e\xfc\x42\x1d\x20\x2b\x4e\xc3\x86\xf6\xc1\xba\xb3\x11\x1a\xdc\x61\x75\x3c\x25\x36\xda\x01\x2a\x19\x19\xa0\x5b\x2b\xfc\xa5\xb8\xb5\x42\xdb\xef\xbc\x6d\xcf\x91\x1f\x88\xf5\x5a\x51\x0d\xcf\x9a\xde\xe9\x24\xa7\xa5\x36\x67\x16\x33\xae\x14\xba\xa7\x0c\xc8\xab\x96\x73\xb6\xbc\xda\x32\x85\x80\xb2\xf8\x0e\x41\x84\x02\x10\x55\xe1\x08\xf7\x54\xa7\xe8\x13\x29\x35\xd2\x02\xc1\x2b\xa4\xb7\x44\xbf\x9c\x67\x70\x7c\x59\xd5\x3f\x80\x98\x7d\xdd\x94\xe8\xe5\x62\x25\x21\xb7\xe4\x1e\x7f\x05\x91\x86\xc8\x78\x47\x6f\x91\x33\xe5\x49\x3f\xce\x7d\x68\xf8\x9f\x27\xf3\x9f\x92\xc4\x43\x91\x95\x26\x24\x4a\x92\xae\x77\xfd\xd6\x86\xcf\x06\xcc\x0d\x87\xc1\x20\x3b\x81\x0e\x93\xa7\x18\x49\xe1\xb8\x87\x70\xb1\xf1\xe9\xcb\xc9\x8a\x42\xda\x15\xab\x7d\x77\xf5\x15\xd3\x3e\x12\x06\x5b\x25\x4e\x00\x72\x0f\x7c\xd3\xc8\x15\x79\x0d\xe9\xa8\xbd\x99\xc3\x75\x90\xe5\x3a\xce\x8f\x21\x42\xaa\xc6\x4c\xbb\xef\x44\x72\x2e\x14\xf5\x3e\x07\x42\xdd\xb1\x96\x37\xa2\x71\x0b\xfc\xda\xe2\x96\x8e\x90\x1c\x93\xb1\xa2\xa0\x65\xa0\xac\xbf\x6a\xb6\xa3\xea\x62\x9e\x19\xc0\xb2\xcf\x3a\xa0\xc4\xf6\x79\x57\x4d\x6d\x9c\x83\x36\xcc\x0d\x86\xae\xf7\xce\x8b\xc7\x3c\xcf\xb6\xcf\x23\xab\x35\xc9\x3f\xe6\x82\x95\x28\xf6\x2d\x07\x44\x25\x46\xf2\x69\x6c\xce\xa7\xd3\xdf\x3b\x00\x93\x2a\x01\x40\x80\x64\x35\xb2\xff\x93\xc2\xe4\xb8\x34\x96\x50\x29\x85\x1c\x96\x27\x5b\x22\x62\xb2\x34\xd2\xd6\x42\xee\x82\x40\x33\x4e\xb6\x42\xb2\xff\xc2\xf9\x82\xef\xbb\x50\x00\xb3\xb2\xaa\x75\x53\x09\x58\x2c\xc0\xa1\xf8\xb8\xe3\xc0\xe8\x86\xf0\x1a\x1e\x71\x36\x10\xd1\x32\xd0\x6e\x67\xaa\x5c\x35\xd8\xc9\x30\xb3\x39\x72\x04\x98\x05\xae\x3c\x41\x75\x1d\xf3\x1b\x32\x61\x08\x11\xeb\xa2\x03\x2f\xc3\x09\xd9\xc7\x11\x89\x43\xdf\x3e\xfd\x75\x64\xe7\xc6\x4e\x67\x92\x61\x31\xdc\x51\xd9\x6f\x8b\x1a\x07\xb4\xb3\xf3\xe9\xd0\xe6\x5e\xa4\xdc\xff\xf2\x6b\xfc\x63\xfa\xb1\x07\xbd\xd3\xaa\x3a\x7f\x86\x8b\x8c\x5b\x08\x64\xca\x29\xcf\x38\x9d\x20\xbe\x61\xee\x59\xdb\x41\xbf\x99\x28\x0c\xab\xbf\xde\x55\xf3\xcc\xec\xd8\xc9\x1d\xcf\xb4\xf7\x9a\xf3\xa2\x9f\x4d\x2d\x08\x70\x06\x78\xd4\xfe\x4f\x58\xb9\x16\xc3\xf8\xef\x83\x2d\xcd\xc1\x0d\x0a\x2f\x3f\x41\x39\x9a\x28\x44\x7c\xc5\x7a\xf9\xe0\xe1\xba\xf5\x3d\x8e\x68\x80\xd5\x98\xcf\x5f\x79\xe1\x88\x99\x8d\x8c\xaf\x09\x74\x9c\xd2\xc4\x00\x7a\xfb\x01\xc1\x65\x4e\x52\xa5\xa8\x4a\x47\x9c\x3a\x22\x70\x7c\x93\xab\x2d\xdd\xc3\x55\xb0\x84\x3a\xbc\xe6\x34\xd7\xc6\xa4\xed\x5e\x31\xb8\x1d\xda\xd2\xcc\xf4\x1e\x4d\x69\xba\x49\x61\xe2\xf7\x57\xef\x10\xf4\x59\x25\xd5\xb3\x33\x24\xe4\x88\x34\x1d\xa4\x7d\xae\x15\x34\xbd\xd0\xb1\x01\x6f\x17\x3b\x56\x32\xa5\x25\xd1\xec\x06\xde\xac\xcc\x30\x37\x71\x19\x04\x8f\x08\xea\x5a\x0b\xfd\x25\xda\x8b\x5a\xa2\x4a\x30\xb8\xda\x6a\x91\xd8\x01\x82\x0e\xfc\x3a\xfa\x61\xf6\x28\x47\x8c\xc6\x56\xef\x55\xef\x45\xff\x71\x40\xfd\x6b\x21\x74\xa7\xfa\x3d\xb2\x23\xf1\xb7\x83\x76\xba\xbc\x18\x2f\x8b\xcb\xd7\xa4\xcc\x29\x1f\x96\xb8\x53\x3b\x45\x89\xcf\x4e\x35\x42\x26\x6d\xe1\x11\x64\xdb\x0a\x38\x52\x3e\x3b\x05\x2f\x3e\x34\xc3\x5e\xcf\xd3\x69\x7a\xdc\xed\xee\xde\xa6\xa7\x75\x01\xfc\xa2\x76\xa7\x59\xf7\xa3\xd7\x79\xa8\xd7\xe9\x39\xda\x3b\xcc\x5d\x9a\xff\xc4\x16\xe7\x5b\x1a\x05\xe0\xa5\x57\x92\x9a\xfc\x06\x72\xf1\x83\x5b\xdf\xf9\x3b\xc5\xc1\xc1\x03\xd9\xa6\xaa\xac\x96\x2f\x3b\x09\xfe\x1d\x12\x73\x34\x17\xdf\x89\xc7\xe7\x61\x4f\xf0\x2d\x91\x25\x14\x90\x26\xf5\xfe\x4d\xd5\x19\xba\xa6\x14\x9a\x3c\x7f\x07\xfc\x6a\xd1\xb1\x25\x34\x92\x9d\xe6\x92\xe6\xb5\x54\x40\xbb\x21\x8a\xec\x7e\x84\xab\xc6\xb5\xa7\xb7\xfd\xd2\xec\x9f\xbb\x7e\x03\x66\x7e\x9e\x86\x2c\x9b\xa5\x40\x2d\xc5\x7e\xba\xae\x4b\xcb\xf8\xd3\x19\x3a\x18\x21\x59\x86\x1c\xe9\x64\x7f\x54\xa0\x28\x35\xef\x6e\x88\x74\x37\x25\x13\xa8\x68\x01\x52\x86\xf7\xb0\xd9\x45\x17\xf9\x81\x48\xad\x00\x7b\x70\x6a\xda\x90\x3f\x8f\x52\xd2\x35\x90\xca\x14\xa7\x4d\xc3\x3f\x3b\x73\x40\x17\x43\x6f\x8b\x71\x6c\x8c\xde\x2e\xfe\x3e\x74\x03\x35\x8d\xd0\x38\xd0\xb6\x48\x01\x06\x67\x34\x8e\x32\x87\x17\x40\xb6\xb7\x1f\x87\xb9\xb6\xdf\x01\x8f\x17\xb6\x0b\x8a\x30\x70\xf4\x44\x6d\xc5\x6d\xba\x52\xa9\x8d\xd9\xc9\x19\x6a\x8e\x80\xde\x98\x83\x09\x2e\x33\xbe\xd4\x92\x6d\x4c\xe8\x18\x9f\xdb\x59\x38\x35\xf3\xa9\xa0\xb8\xb2\xf7\x61\xe7\x74\x07\x35\x7d\x52\xf4\x37\x02\x76\x39\x0f\xcb\x53\x13\x71\xd3\x49\xe3\xbc\x49\xb0\x22\xba\x6f\x0c\xd9\x82\x39\xd7\x8d\x8a\x33\x53\x0d\xf2\xe8\x15\x32\x9f\xf3\x8c\x42\x29\x2b\xd0\x4f\x0b\x54\xd6\x9c\xcf\xa2\x6a\xad\x08\x49\xed\xe9\xa7\x5b\xbd\xe3\x53\x6c\x62\x09\x61\xf4\x8b\xb5\x25\x75\xf2\x83\x89\xdd\x55\x21\x4a\x52\x60\xad\xb0\xd1\x7d\xc8\x88\xbb\x4f\xaa\x31\x25\x22\xcd\xd3\x38\x0e\x02\xc1\x6b\xfc\x91\xdc\x50\x1c\x40\x47\x44\xb9\xa2\x0f\x9b\xe9\xf2\xcb\x73\x3c\x7e\x84\x81\xf8\x5e\xd0\xbd\x90\xc6\xa4\x53\x80\x68\x8b\x53\x2b\x5a\x63\xe3\xd7\x3d\x0d\xe3\xb7\x1c\x0d\x60\x38\xe3\x31\x05\xd7\xc0\x39\x6a\x3a\xbb\xe8\x8a\x8b\xfb\xe7\x9c\xe5\xd7\x03\x26\x1a\xe2\xa0\x9f\x7c\x6d\x98\x75\x6a\x2e\xd3\xe6\x93\x58\x81\xdb\x19\x20\xe9\x7f\xda\x09\x50\x4b\x7e\x8e\x70\x46\x2a\x96\xd9\x2f\x59\xca\x7c\x52\xfc\x97\x19\xbd\xbd\x3c\x1e\xb3\xf0\x41\x0b\xc7\x20\x87\xb0\x3e\x47\xff\xfc\xf8\xfe\x5d\x0a\x8d\x30\xd4\x02\xb6\xde\x4f\x0f\x91\xec\xbb\x54\x33\x38\x82\x98\x2d\x2e\x5f\xfc\x15\xef\x7c\xfc\x3c\x22\xfa\x18\x87\xbe\xc3\xb9\x82\x62\x02\xaa\x93\xaa\x02\xc7\x10\x23\x24\xfb\xac\xa0\xae\x74\x34\xf5\xa0\xf6\x44\x3b\xfb\x4e\x06\xd3\x0c\x2d\x16\x08\xa2\x21\x3a\x0a\xfc\x96\x9a\xfa\x05\xce\xc3\x1f\xde\x7f\xbc\xc2\x27\xe2\xb9\x83\xfb\xa3\x81\xb9\x09\xf0\x36\xbc\x0f\xa3\x5f\xc0\xf1\x26\x91\x4f\x6b\xd1\x8e\xb2\xd0\xaf\xfc\x9c\x92\xcf\xe4\x6e\x0a\x42\x66\x69\x21\x4a\x1a\x43\xc2\x18\xdc\xd2\xf8\x16\xc8\x16\x38\xd4\x7e\x7b\x86\x69\x43\x8a\x82\x14\x53\x53\x48\x1b\xc1\xb3\x74\x4d\x18\x8f\x22\x80\x96\x4f\x50\x90\x25\xec\x34\xf7\x71\x65\x3e\xd2\xe0\x33\x84\x57\x20\xfd\x1a\xcf\x5c\x72\x00\x04\x36\x51\x95\x28\x15\xb5\x01\x62\xd7\x9c\xce\x28\x49\x77\xe2\x86\x9e\x0a\x56\x9f\x06\xe6\xc7\x97\x5c\xdb\xf6\x81\x96\xa1\x86\x36\x6d\xa1\xaf\xb6\xb1\x1f\x8f\x75\xd6\xbd\xeb\xd5\xd9\x58\x3e\x9b\x25\x8f\x2a\x9f\xa7\xd1\xdd\xba\x38\x86\x8b\x75\xd1\x97\xbb\x08\xfa\x7e\xe5\xae\x5a\x83\x95\x00\x3c\x59\xe2\xba\xd8\x13\xc8\x06\xd6\x72\x66\x37\x50\xed\x3e\xb3\x53\x20\x17\x1d\x80\xe9\x9e\x68\x1b\x38\x42\x70\xdf\x64\xb8\x6b\x1c\xe9\xc0\xa0\xa6\xa1\x9c\xcc\x4c\xc9\xc5\x78\xc4\xb2\x2f\x27\x51\x6d\x59\x66\x72\xf9\xe6\xf7\x37\x57\x6f\x26\x67\x1d\x6e\x9d\x3c\xc8\xad\xd9\x04\x38\xe0\xa4\x6b\xbf\x0b\xef\x75\x9c\x82\x1b\xa7\x60\xef\x94\x1e\xed\x0d\x58\xeb\x65\x5c\xd1\x65\xa8\xff\x23\x37\xd9\xef\xc8\x53\xec\xaf\x82\x06\x49\x21\x9f\x0d\x9d\x3e\x44\x43\x8f\xda\xbb\x89\x54\xf3\x07\x97\x56\x7f\x37\xf8\x5f\x00\x00\x00\xff\xff\x7a\x0c\x10\xe3\xd2\x20\x00\x00")

func templates_listprefixes_html_bytes() ([]byte, error) {
	return bindata_read(
		_templates_listprefixes_html,
		"templates/listPrefixes.html",
	)
}

func templates_listprefixes_html() (*asset, error) {
	bytes, err := templates_listprefixes_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/listPrefixes.html", size: 8402, mode: os.FileMode(420), modTime: time.Unix(1441508668, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _templates_main_html = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x56\xdf\x8f\xe3\x34\x10\x7e\xbf\xbf\xc2\x17\x5e\x71\xac\x65\x85\x84\x56\x49\xa5\xbb\xeb\x09\xf6\x81\x65\x05\x87\x04\x8f\xd3\x78\x9a\x78\x71\xec\x9c\xed\x6c\x5b\xad\xfa\xbf\x33\xce\x8f\xb6\x49\xbb\xe5\x00\xc1\x43\x14\xff\x98\xf9\x3c\xfe\x66\x3e\xdb\xd9\xdb\xe5\x4f\x1f\x3e\xfd\xfe\xf8\x91\x55\xa1\xd6\x8b\x37\x59\xfc\x31\x0d\xa6\xcc\x13\x34\xc9\xe2\x0d\x63\x59\x85\x20\x63\x83\x9a\x35\x06\x60\x45\x05\xce\x63\xc8\x93\x36\xac\xf9\x77\xc9\xe9\x54\x15\x42\xc3\xf1\x73\xab\x9e\xf3\xe4\x37\xfe\xeb\x3b\xfe\xc1\xd6\x0d\x04\xb5\xd2\x98\xb0\xc2\x9a\x80\x86\xfc\xee\x3f\xe6\x28\x4b\x9c\x78\x1a\xa8\x31\x4f\x9e\x15\x6e\x1a\xeb\xc2\x89\xf1\x46\xc9\x50\xe5\x12\x9f\x55\x81\xbc\xeb\x7c\xcd\x94\x51\x41\x81\xe6\xbe\x00\x8d\xf9\x0d\x01\xf5\x48\x41\x05\x8d\x8b\xef\xef\x1f\xdf\xfd\x98\x89\xbe\xd3\x4f\x68\x65\xfe\x60\x0e\x75\x9e\xf8\xb0\xd3\xe8\x2b\x44\x5a\xa3\x72\xb8\xce\x93\x18\xb3\xbf\x13\xa2\x86\x6d\x21\x4d\xba\xb2\x36\xf8\xe0\xa0\x89\x9d\xc2\xd6\xe2\x30\x20\x6e\xd3\xdb\xf4\x5b\x51\x78\x7f\x1c\x4b\x6b\x45\x56\xde\x27\xff\xf5\x42\x3c\x54\x58\xe3\x7c\x39\x5f\x38\xd5\x04\xe6\x5d\x71\x84\x87\x27\xd8\xa6\xa5\xb5\xa5\x46\x68\x94\xef\xa0\xe3\x98\xd0\x6a\xe5\xc5\xd3\xe7\x16\xdd\x4e\xdc\xa4\x37\x37\xe9\xed\xd0\xeb\x50\x9f\x08\x34\x13\x3d\xe0\xe9\x66\xfa\xd8\x45\xa9\x1a\xa8\xbb\xa5\xcf\xb6\xd7\x15\x89\xe8\xab\x24\x36\x57\x56\xee\xc6\x8c\xbc\xe5\x9c\x3d\xc0\xf3\x0a\x1c\xe3\x7c\x80\x35\xf0\xcc\x0a\x0d\xde\xe7\x89\xe9\xa7\xfa\x1f\x97\xb8\x86\x56\x87\xb1\xeb\x03\x55\x4e\xc1\x83\x6d\x86\xed\x92\xaf\x54\x07\xdf\x58\x21\xa0\x0c\xba\xc3\xec\x74\x7e\x40\x89\x71\x4d\x6c\x62\x84\x6d\x08\xd6\xb0\xb0\x6b\xa8\xe6\xfa\x4e\x32\x73\x0b\xb6\x24\x02\xa9\x0c\xb5\x86\xc6\xa3\x4c\x98\x84\x00\xc3\x70\x5c\xbc\x1f\x1f\x87\xc1\x95\x51\x11\x5f\xf5\xde\x09\x03\xa7\x80\xe3\xb6\x01\x23\x51\xe6\xc9\x1a\x74\xb4\xed\x46\x63\xdc\xce\xea\xc3\x52\x93\xd0\x62\x4e\xc9\x69\x0c\xc6\x3b\x6e\x8d\xde\x25\x8b\x4f\x7d\x38\xe4\xa1\x4a\x62\xc5\x1a\x4a\x15\xd9\x5d\x71\x55\xb4\x0e\xef\xe0\xff\x2f\xd3\x4c\xf4\x54\x4e\xc6\xce\x13\xb2\x72\x44\x4a\x32\xaa\x94\xe6\x4f\xd2\x37\xeb\x46\x67\x25\x0f\x44\xcd\x80\xc6\x1c\x1c\x92\x34\x61\xf2\xe5\x45\xad\x59\xfa\x0b\x6a\x2c\x02\xca\x9f\x11\x74\xbd\xdf\x9f\x46\xd6\xea\x13\xbc\xb1\xe6\xe8\x37\xcf\x87\x56\x8b\x0c\x46\x19\xb8\x88\x23\x5e\x5e\xa6\xc0\xe9\xbd\xdc\xef\x45\x43\x26\x6a\x8b\xa4\xa3\xc7\xa1\x95\x09\x20\x9e\x08\xe0\x1f\x22\x56\xd6\x07\x82\xfb\x21\xfe\xfe\x2d\x96\xb4\x35\xa9\x85\xd0\x96\x7d\xe3\x12\x5e\x26\x5a\x3d\xe5\x10\x8d\xfc\x32\xd6\xc6\xa6\x53\x65\x15\xce\x29\x1c\x9d\xa4\xb3\x8d\xb4\x1b\x33\xb3\x20\x1b\x98\x9b\x0c\x5a\x9b\x09\xef\x00\xc0\x48\x43\x27\xea\xed\xa4\x55\x81\x6f\x6c\xd3\x36\x79\x12\x5c\x8b\xaf\xa8\x70\xd1\x91\x72\xb1\x3c\xee\xe8\x68\x58\x9c\xd1\xf7\x40\x57\xd3\x7e\x4f\xd5\xbd\x18\xf8\x98\x28\xa2\x00\x17\xcf\xc0\x41\x0e\x91\xd5\xf9\xce\x8e\x94\x1d\xb6\x56\xa3\x69\xcf\x28\x18\x6b\xb6\x5b\xd5\x4f\x68\x1f\xa7\x49\x3a\x25\x5e\xb1\x78\xa5\x1c\x66\xe5\x49\x23\xe3\x9e\x2e\xd5\xd4\xe5\xcc\x1f\x53\xd9\x13\xef\xb1\x01\x07\xc1\x1e\x65\x49\x6a\x55\xdd\x51\xfb\xb7\x21\xcf\x62\x2e\xe8\x17\x28\x55\x0f\xb8\x49\xd3\xf4\x5a\x98\xd7\x45\x7e\x95\x95\x4b\x22\xa1\xa1\xb8\xee\xb2\xfb\xb3\xce\xf4\x2f\x02\xb8\xb4\xa9\xb9\x8e\xe2\xc8\x35\xa5\xf5\xe7\x5e\xbc\x2c\x45\x4a\x3a\x3a\x9e\x6c\xe3\x9d\x39\x39\x1a\x33\x41\x36\xe3\x05\x7b\xf5\x42\xa4\x4d\x3e\x42\x89\x43\x7c\x03\xc4\x9b\x23\x71\x4b\x5c\xb5\xe5\x38\x7b\x15\x29\xab\x9c\xb8\x74\x09\x3b\xbb\x79\xe5\xfa\xa5\x3d\x70\x5f\xf3\x9b\x6f\x58\xc0\x6d\xe0\x05\x3d\xe6\xe6\xd7\xf0\x49\x4a\xe8\x3d\xb9\x7c\x3f\xd7\xf4\x80\xb4\x0a\x86\xd1\xc7\x95\x59\xdb\xae\xb1\x8d\xa7\x58\x0c\xfd\x8e\x75\x9e\x6c\xf9\x7e\xa2\xbb\xc9\x35\x32\x21\xee\xd0\x3c\xcd\xdb\xeb\x4f\xa9\x2f\x7d\xa9\x3d\xcd\x5f\x84\xf3\xc7\x14\x1d\x1e\xdd\xa3\x88\x9e\x49\xdd\x33\xfb\xcf\x00\x00\x00\xff\xff\x62\x2d\xd1\xd8\x77\x0b\x00\x00")

func templates_main_html_bytes() ([]byte, error) {
	return bindata_read(
		_templates_main_html,
		"templates/main.html",
	)
}

func templates_main_html() (*asset, error) {
	bytes, err := templates_main_html_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "templates/main.html", size: 2935, mode: os.FileMode(420), modTime: time.Unix(1441435915, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

var _gipam_css = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd2\x4b\x2a\xc9\xd3\xad\x28\x56\xa8\xe6\x52\x00\x82\x82\xc4\x94\x94\xcc\xbc\x74\xdd\xa2\xcc\xf4\x8c\x12\x2b\x05\xc3\x82\x0a\x6b\x14\xf1\x9c\xd4\x34\x98\x70\x2d\x17\x97\x5e\x7a\x4e\x65\x41\x46\x66\x72\x7e\x9e\x6e\x71\x6e\x62\x4e\x4e\x6a\x11\xd4\x98\xb4\xfc\xbc\x12\xdd\xe2\xcc\xaa\x54\xa0\x5a\x03\x88\x62\x40\x00\x00\x00\xff\xff\x54\x0d\xbb\xcd\x68\x00\x00\x00")

func gipam_css_bytes() ([]byte, error) {
	return bindata_read(
		_gipam_css,
		"gipam.css",
	)
}

func gipam_css() (*asset, error) {
	bytes, err := gipam_css_bytes()
	if err != nil {
		return nil, err
	}

	info := bindata_file_info{name: "gipam.css", size: 104, mode: os.FileMode(420), modTime: time.Unix(1441431548, 0)}
	a := &asset{bytes: bytes, info:  info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"templates/createPrefix.html": templates_createprefix_html,
	"templates/createRealm.html": templates_createrealm_html,
	"templates/deleteRealm.html": templates_deleterealm_html,
	"templates/listHosts.html": templates_listhosts_html,
	"templates/listPrefixes.html": templates_listprefixes_html,
	"templates/main.html": templates_main_html,
	"gipam.css": gipam_css,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for name := range node.Children {
		rv = append(rv, name)
	}
	return rv, nil
}

type _bintree_t struct {
	Func func() (*asset, error)
	Children map[string]*_bintree_t
}
var _bintree = &_bintree_t{nil, map[string]*_bintree_t{
	"gipam.css": &_bintree_t{gipam_css, map[string]*_bintree_t{
	}},
	"templates": &_bintree_t{nil, map[string]*_bintree_t{
		"createPrefix.html": &_bintree_t{templates_createprefix_html, map[string]*_bintree_t{
		}},
		"createRealm.html": &_bintree_t{templates_createrealm_html, map[string]*_bintree_t{
		}},
		"deleteRealm.html": &_bintree_t{templates_deleterealm_html, map[string]*_bintree_t{
		}},
		"listHosts.html": &_bintree_t{templates_listhosts_html, map[string]*_bintree_t{
		}},
		"listPrefixes.html": &_bintree_t{templates_listprefixes_html, map[string]*_bintree_t{
		}},
		"main.html": &_bintree_t{templates_main_html, map[string]*_bintree_t{
		}},
	}},
}}

// Restore an asset under the given directory
func RestoreAsset(dir, name string) error {
        data, err := Asset(name)
        if err != nil {
                return err
        }
        info, err := AssetInfo(name)
        if err != nil {
                return err
        }
        err = os.MkdirAll(_filePath(dir, path.Dir(name)), os.FileMode(0755))
        if err != nil {
                return err
        }
        err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
        if err != nil {
                return err
        }
        err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
        if err != nil {
                return err
        }
        return nil
}

// Restore assets under the given directory recursively
func RestoreAssets(dir, name string) error {
        children, err := AssetDir(name)
        if err != nil { // File
                return RestoreAsset(dir, name)
        } else { // Dir
                for _, child := range children {
                        err = RestoreAssets(dir, path.Join(name, child))
                        if err != nil {
                                return err
                        }
                }
        }
        return nil
}

func _filePath(dir, name string) string {
        cannonicalName := strings.Replace(name, "\\", "/", -1)
        return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

